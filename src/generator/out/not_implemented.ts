/* AUTOGENERATED CODE BELOW */
export class Metacollection {
  
  /**
   * @param name
   * @param content
   * @return any
   */
  addItem(name: any, content: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  removeItem(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  clear(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param index
   * @return any
   */
  value(index: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param index
   * @return any
   */
  text(index: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mcount: any;
  get count(): any {
    return this.mcount;
  }
  set count(value: any) {
    this.mcount = value;
  }
}

export class HTMLBODY {
  
  /**
   * 
   */
  private mmeta: any;
  get meta(): any {
    return this.mmeta;
  }
  set meta(value: any) {
    this.mmeta = value;
  }
  
  /**
   * 
   */
  private mmetaEquiv: any;
  get metaEquiv(): any {
    return this.mmetaEquiv;
  }
  set metaEquiv(value: any) {
    this.mmetaEquiv = value;
  }
  
  /**
   * 
   */
  private mjScriptSrc: any;
  get jScriptSrc(): any {
    return this.mjScriptSrc;
  }
  set jScriptSrc(value: any) {
    this.mjScriptSrc = value;
  }
  
  /**
   * 
   */
  private mheaderRawHTML: any;
  get headerRawHTML(): any {
    return this.mheaderRawHTML;
  }
  set headerRawHTML(value: any) {
    this.mheaderRawHTML = value;
  }
}

export class File {
  
  /**
   * @return any
   */
  delete(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  exists(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  rename(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  copy(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getName(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getAbsoluteName(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getURI(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return number
   */
  getLength(): number {
    notImplemented();
    return null;
  }
  
  /**
   * @return Date
   */
  getLastModified(): Date {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getPath(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param encoding
   * @return any
   */
  open(encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param encoding
   * @return any
   */
  openWrite(encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param encoding
   * @return any
   */
  openRead(encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  close(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  readLine(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param encoding
   * @return any
   */
  readAllText(encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param encoding
   * @return any
   */
  readAllLines(encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param value
   * @return any
   */
  writeLine(value: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param value
   * @param encoding
   * @return any
   */
  writeAllText(value: any, encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param value
   * @param encoding
   * @return any
   */
  writeAllLines(value: any, encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param value
   * @param encoding
   * @return any
   */
  appendAllText(value: any, encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param vale
   * @param encoding
   * @return any
   */
  appendAllLines(vale: any, encoding: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  create(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param xSLTFile
   * @return any
   */
  xSLTApply(xSLTFile: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  hTMLClean(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param base64String
   * @return boolean
   */
  fromBase64String(base64String: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private mseparator: any;
  get separator(): any {
    return this.mseparator;
  }
  set separator(value: any) {
    this.mseparator = value;
  }
  
  /**
   * 
   */
  private meOF: boolean;
  get eOF(): boolean {
    return this.meOF;
  }
  set eOF(value: boolean) {
    this.meOF = value;
  }
  
  /**
   * 
   */
  private msource: any;
  get source(): any {
    return this.msource;
  }
  set source(value: any) {
    this.msource = value;
  }
}

export class FileCollection {
  
  /**
   * @param i
   * @return any
   */
  item(i: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mcount: number;
  get count(): number {
    return this.mcount;
  }
  set count(value: number) {
    this.mcount = value;
  }
}

export class Directory {
  
  /**
   * @return any
   */
  create(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  delete(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  exists(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  rename(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getName(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getAbsoluteName(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param filter
   * @return any
   */
  getFiles(filter: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getDirectories(): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private static mapplicationDataPath: any;
  static get applicationDataPath(): any {
    return this.mapplicationDataPath;
  }
  
  
  /**
   * 
   */
  private static mexternalFilesPath: any;
  static get externalFilesPath(): any {
    return this.mexternalFilesPath;
  }
  
  
  /**
   * 
   */
  private static mtemporaryFilesPath: any;
  static get temporaryFilesPath(): any {
    return this.mtemporaryFilesPath;
  }
  
  
  /**
   * 
   */
  private static mcacheFilesPath: any;
  static get cacheFilesPath(): any {
    return this.mcacheFilesPath;
  }
  
  
  /**
   * 
   */
  private msource: any;
  get source(): any {
    return this.msource;
  }
  set source(value: any) {
    this.msource = value;
  }
}

export class DirectoryCollection {
  
  /**
   * @param i
   * @return any
   */
  item(i: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mcount: number;
  get count(): number {
    return this.mcount;
  }
  set count(value: number) {
    this.mcount = value;
  }
}

export class LDAPClient {
  
  /**
   * @return number
   */
  connect(): number {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  disconnect(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param attributeName
   * @param context
   * @param matchAttributes
   * @return any
   */
  getAttribute(attributeName: any, context: any, matchAttributes: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mhost: any;
  get host(): any {
    return this.mhost;
  }
  set host(value: any) {
    this.mhost = value;
  }
  
  /**
   * 
   */
  private mport: number;
  get port(): number {
    return this.mport;
  }
  set port(value: number) {
    this.mport = value;
  }
  
  /**
   * 
   */
  private mauthenticationMethod: any;
  get authenticationMethod(): any {
    return this.mauthenticationMethod;
  }
  set authenticationMethod(value: any) {
    this.mauthenticationMethod = value;
  }
  
  /**
   * 
   */
  private muser: any;
  get user(): any {
    return this.muser;
  }
  set user(value: any) {
    this.muser = value;
  }
  
  /**
   * 
   */
  private mpassword: any;
  get password(): any {
    return this.mpassword;
  }
  set password(value: any) {
    this.mpassword = value;
  }
  
  /**
   * 
   */
  private msecure: number;
  get secure(): number {
    return this.msecure;
  }
  set secure(value: number) {
    this.msecure = value;
  }
}

export class Properties {
  
  /**
   * @param attributeName
   * @param attributeValue
   * @return any
   */
  set(attributeName: any, attributeValue: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param attributeName
   * @return any
   */
  get(attributeName: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param attributeName
   * @return any
   */
  remove(attributeName: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  clear(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toJson(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromJson(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
}

export class QueueMessage {
  
  /**
   * 
   */
  private mtext: any;
  get text(): any {
    return this.mtext;
  }
  set text(value: any) {
    this.mtext = value;
  }
  
  /**
   * 
   */
  private mpriority: number;
  get priority(): number {
    return this.mpriority;
  }
  set priority(value: number) {
    this.mpriority = value;
  }
}

export class Queue {
  
  /**
   * @return number
   */
  connect(): number {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  disconnect(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param message
   * @return any
   */
  send(message: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  commit(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  rollback(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  receive(): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private muser: any;
  get user(): any {
    return this.muser;
  }
  set user(value: any) {
    this.muser = value;
  }
  
  /**
   * 
   */
  private mpassword: any;
  get password(): any {
    return this.mpassword;
  }
  set password(value: any) {
    this.mpassword = value;
  }
  
  /**
   * 
   */
  private mprovider: any;
  get provider(): any {
    return this.mprovider;
  }
  set provider(value: any) {
    this.mprovider = value;
  }
  
  /**
   * 
   */
  private mbrowse: number;
  get browse(): number {
    return this.mbrowse;
  }
  set browse(value: number) {
    this.mbrowse = value;
  }
}

export class Property {
  
  /**
   * 
   */
  private mkey: any;
  get key(): any {
    return this.mkey;
  }
  set key(value: any) {
    this.mkey = value;
  }
  
  /**
   * 
   */
  private mvalue: any;
  get value(): any {
    return this.mvalue;
  }
  set value(value: any) {
    this.mvalue = value;
  }
}

export class Expression {
  
  /**
   * @return number
   */
  evaluate(): number {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mexpression: any;
  get expression(): any {
    return this.mexpression;
  }
  set expression(value: any) {
    this.mexpression = value;
  }
  
  /**
   * 
   */
  private mvariables: any;
  get variables(): any {
    return this.mvariables;
  }
  set variables(value: any) {
    this.mvariables = value;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
}

// Type: RegEx

/**
 * @return number
 */
export function getLastErrCode(): number {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function getLastErrDescription(): any {
  notImplemented();
  return null;
}
// end Type

// Type: TextSearch

/**
 * @param content
 * @param itemsPerPage
 * @param pageNumber
 * @return any
 */
export function textSearchfind(content: any, itemsPerPage: number, pageNumber: number): any {
  notImplemented();
  return null;
}

/**
 * @param variableBCorText
 * @param info
 * @return boolean
 */
export function textSearchadd(variableBCorText: any, info: any): boolean {
  notImplemented();
  return null;
}

/**
 * @param variableBCorText
 * @param info
 * @return boolean
 */
export function textSearchupdate(variableBCorText: any, info: any): boolean {
  notImplemented();
  return null;
}

/**
 * @param variable
 * @return boolean
 */
export function textSearchdelete(variable: any): boolean {
  notImplemented();
  return null;
}

/**
 * @return boolean
 */
export function buildDictionary(): boolean {
  notImplemented();
  return null;
}

/**
 * @param text
 * @return any
 */
export function checkSpell(text: any): any {
  notImplemented();
  return null;
}

/**
 * @return number
 */
export function reindexAll(): number {
  notImplemented();
  return null;
}

/**
 * @param variableBCorText
 * @param query
 * @param textType
 * @param preTag
 * @param postTag
 * @param fragmentSize
 * @param maxNumFragments
 * @return any
 */
export function hTMLPreview(variableBCorText: any, query: any, textType: any, preTag: any, postTag: any, fragmentSize: number, maxNumFragments: number): any {
  notImplemented();
  return null;
}
// end Type

export class Window {
  
  /**
   * @return any
   */
  open(): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private static mcentered: number;
  static get centered(): number {
    return this.mcentered;
  }
  
  
  /**
   * 
   */
  private static mabsolute: number;
  static get absolute(): number {
    return this.mabsolute;
  }
  
  
  /**
   * 
   */
  private mautoresize: boolean;
  get autoresize(): boolean {
    return this.mautoresize;
  }
  set autoresize(value: boolean) {
    this.mautoresize = value;
  }
  
  /**
   * 
   */
  private mwidth: number;
  get width(): number {
    return this.mwidth;
  }
  set width(value: number) {
    this.mwidth = value;
  }
  
  /**
   * 
   */
  private mheight: number;
  get height(): number {
    return this.mheight;
  }
  set height(value: number) {
    this.mheight = value;
  }
  
  /**
   * 
   */
  private mposition: number;
  get position(): number {
    return this.mposition;
  }
  set position(value: number) {
    this.mposition = value;
  }
  
  /**
   * 
   */
  private mtop: number;
  get top(): number {
    return this.mtop;
  }
  set top(value: number) {
    this.mtop = value;
  }
  
  /**
   * 
   */
  private mleft: number;
  get left(): number {
    return this.mleft;
  }
  set left(value: number) {
    this.mleft = value;
  }
  
  /**
   * 
   */
  private murl: any;
  get url(): any {
    return this.murl;
  }
  set url(value: any) {
    this.murl = value;
  }
  
  /**
   * 
   */
  private mobject: any;
  get object(): any {
    return this.mobject;
  }
  set object(value: any) {
    this.mobject = value;
  }
  
  /**
   * 
   */
  private mclass: any;
  get class(): any {
    return this.mclass;
  }
  set class(value: any) {
    this.mclass = value;
  }
}

export class Video {
  
  /**
   * @param videoURL
   * @return any
   */
  fromURL(videoURL: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Video Name
   */
  private mvideoName: any;
  get videoName(): any {
    return this.mvideoName;
  }
  
  
  /**
   * Video Type
   */
  private mvideoType: any;
  get videoType(): any {
    return this.mvideoType;
  }
  
  
  /**
   * Video URI
   */
  private mvideoURI: any;
  get videoURI(): any {
    return this.mvideoURI;
  }
  set videoURI(value: any) {
    this.mvideoURI = value;
  }
}

export class Audio {
  
  /**
   * @param videoURL
   * @return any
   */
  fromURL(videoURL: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Audio Name
   */
  private maudioName: any;
  get audioName(): any {
    return this.maudioName;
  }
  
  
  /**
   * Audio Type
   */
  private maudioType: any;
  get audioType(): any {
    return this.maudioType;
  }
  
  
  /**
   * Audio URI
   */
  private maudioURI: any;
  get audioURI(): any {
    return this.maudioURI;
  }
  set audioURI(value: any) {
    this.maudioURI = value;
  }
}

export class BinaryFile {
  
  /**
   * @param fileURL
   * @return any
   */
  fromURL(fileURL: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
}

export class Cookie {
  
  /**
   * 
   */
  private mname: any;
  get name(): any {
    return this.mname;
  }
  set name(value: any) {
    this.mname = value;
  }
  
  /**
   * 
   */
  private mvalue: any;
  get value(): any {
    return this.mvalue;
  }
  set value(value: any) {
    this.mvalue = value;
  }
  
  /**
   * 
   */
  private mpath: any;
  get path(): any {
    return this.mpath;
  }
  set path(value: any) {
    this.mpath = value;
  }
  
  /**
   * 
   */
  private mexpirationDate: Date;
  get expirationDate(): Date {
    return this.mexpirationDate;
  }
  set expirationDate(value: Date) {
    this.mexpirationDate = value;
  }
  
  /**
   * 
   */
  private mdomain: any;
  get domain(): any {
    return this.mdomain;
  }
  set domain(value: any) {
    this.mdomain = value;
  }
  
  /**
   * 
   */
  private msecure: boolean;
  get secure(): boolean {
    return this.msecure;
  }
  set secure(value: boolean) {
    this.msecure = value;
  }
  
  /**
   * 
   */
  private mhttpOnly: boolean;
  get httpOnly(): boolean {
    return this.mhttpOnly;
  }
  set httpOnly(value: boolean) {
    this.mhttpOnly = value;
  }
}

export class CallOptions {
  
  /**
   * 
   */
  private menterEffect: any;
  get enterEffect(): any {
    return this.menterEffect;
  }
  set enterEffect(value: any) {
    this.menterEffect = value;
  }
  
  /**
   * 
   */
  private mexitEffect: any;
  get exitEffect(): any {
    return this.mexitEffect;
  }
  set exitEffect(value: any) {
    this.mexitEffect = value;
  }
  
  /**
   * 
   */
  private mtype: any;
  get type(): any {
    return this.mtype;
  }
  set type(value: any) {
    this.mtype = value;
  }
  
  /**
   * 
   */
  private mtarget: any;
  get target(): any {
    return this.mtarget;
  }
  set target(value: any) {
    this.mtarget = value;
  }
  
  /**
   * 
   */
  private mtargetSize: any;
  get targetSize(): any {
    return this.mtargetSize;
  }
  set targetSize(value: any) {
    this.mtargetSize = value;
  }
  
  /**
   * 
   */
  private mtargetWidth: any;
  get targetWidth(): any {
    return this.mtargetWidth;
  }
  set targetWidth(value: any) {
    this.mtargetWidth = value;
  }
  
  /**
   * 
   */
  private mtargetHeight: any;
  get targetHeight(): any {
    return this.mtargetHeight;
  }
  set targetHeight(value: any) {
    this.mtargetHeight = value;
  }
}

export class CryptoCertificate {
  
  /**
   * @param certPath
   * @param password
   * @return number
   */
  load(certPath: any, password: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param base64String
   * @return number
   */
  fromBase64(base64String: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toBase64(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  hasPrivateKey(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  verify(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private missuer: any;
  get issuer(): any {
    return this.missuer;
  }
  set issuer(value: any) {
    this.missuer = value;
  }
  
  /**
   * 
   */
  private msubject: any;
  get subject(): any {
    return this.msubject;
  }
  set subject(value: any) {
    this.msubject = value;
  }
  
  /**
   * 
   */
  private mserialNumber: any;
  get serialNumber(): any {
    return this.mserialNumber;
  }
  set serialNumber(value: any) {
    this.mserialNumber = value;
  }
  
  /**
   * 
   */
  private mnotAfter: Date;
  get notAfter(): Date {
    return this.mnotAfter;
  }
  set notAfter(value: Date) {
    this.mnotAfter = value;
  }
  
  /**
   * 
   */
  private mnotBefore: Date;
  get notBefore(): Date {
    return this.mnotBefore;
  }
  set notBefore(value: Date) {
    this.mnotBefore = value;
  }
  
  /**
   * 
   */
  private mversion: number;
  get version(): number {
    return this.mversion;
  }
  set version(value: number) {
    this.mversion = value;
  }
}

export class CryptoHash {
  
  /**
   * @param text
   * @param key
   * @return any
   */
  compute(text: any, key: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private malgorithm: any;
  get algorithm(): any {
    return this.malgorithm;
  }
  set algorithm(value: any) {
    this.malgorithm = value;
  }
}

export class CryptoSymmetricEncrypt {
  
  /**
   * @param text
   * @return any
   */
  encrypt(text: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param text
   * @return any
   */
  decrypt(text: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private malgorithm: any;
  get algorithm(): any {
    return this.malgorithm;
  }
  set algorithm(value: any) {
    this.malgorithm = value;
  }
  
  /**
   * 
   */
  private mkey: any;
  get key(): any {
    return this.mkey;
  }
  set key(value: any) {
    this.mkey = value;
  }
  
  /**
   * 
   */
  private miV: any;
  get iV(): any {
    return this.miV;
  }
  set iV(value: any) {
    this.miV = value;
  }
  
  /**
   * 
   */
  private mkeySize: number;
  get keySize(): number {
    return this.mkeySize;
  }
  set keySize(value: number) {
    this.mkeySize = value;
  }
  
  /**
   * 
   */
  private mblockSize: number;
  get blockSize(): number {
    return this.mblockSize;
  }
  set blockSize(value: number) {
    this.mblockSize = value;
  }
}

export class CryptoAsymmetricEncrypt {
  
  /**
   * @param text
   * @return any
   */
  encrypt(text: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param text
   * @return any
   */
  decrypt(text: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private malgorithm: any;
  get algorithm(): any {
    return this.malgorithm;
  }
  set algorithm(value: any) {
    this.malgorithm = value;
  }
  
  /**
   * 
   */
  private mcertificate: any;
  get certificate(): any {
    return this.mcertificate;
  }
  set certificate(value: any) {
    this.mcertificate = value;
  }
}

export class CryptoSign {
  
  /**
   * @param text
   * @param detached
   * @return any
   */
  sign(text: any, detached: boolean): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param signature
   * @param text
   * @param detached
   * @return boolean
   */
  verify(signature: any, text: any, detached: boolean): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private malgorithm: any;
  get algorithm(): any {
    return this.malgorithm;
  }
  set algorithm(value: any) {
    this.malgorithm = value;
  }
  
  /**
   * 
   */
  private mcertificate: any;
  get certificate(): any {
    return this.mcertificate;
  }
  set certificate(value: any) {
    this.mcertificate = value;
  }
  
  /**
   * 
   */
  private mvalidateCertificate: boolean;
  get validateCertificate(): boolean {
    return this.mvalidateCertificate;
  }
  set validateCertificate(value: boolean) {
    this.mvalidateCertificate = value;
  }
  
  /**
   * 
   */
  private mstandard: any;
  get standard(): any {
    return this.mstandard;
  }
  set standard(value: any) {
    this.mstandard = value;
  }
}

export class CryptoSignXml {
  
  /**
   * @param reference
   * @return any
   */
  addReference(reference: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param text
   * @return any
   */
  sign(text: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param text
   * @param xPath
   * @return any
   */
  signElements(text: any, xPath: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param signature
   * @return boolean
   */
  verify(signature: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  set errCode(value: number) {
    this.merrCode = value;
  }
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  set errDescription(value: any) {
    this.merrDescription = value;
  }
  
  /**
   * 
   */
  private mcertificate: any;
  get certificate(): any {
    return this.mcertificate;
  }
  set certificate(value: any) {
    this.mcertificate = value;
  }
  
  /**
   * 
   */
  private mvalidateCertificate: boolean;
  get validateCertificate(): boolean {
    return this.mvalidateCertificate;
  }
  set validateCertificate(value: boolean) {
    this.mvalidateCertificate = value;
  }
  
  /**
   * 
   */
  private mkeyInfoClauses: any;
  get keyInfoClauses(): any {
    return this.mkeyInfoClauses;
  }
  set keyInfoClauses(value: any) {
    this.mkeyInfoClauses = value;
  }
}

export class Geography {
  
  /**
   * @param gSText
   * @return any
   */
  fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toString(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoJson(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toWkt(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoPoint(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoLine(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoPolygon(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param point
   * @return number
   */
  distance(point: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param object
   * @return boolean
   */
  intersect(object: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNull(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setNull(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setEmpty(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNullOrEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param pointFrom
   * @param pointTo
   * @return number
   */
  static distance(pointFrom: any, pointTo: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param objectA
   * @param objectB
   * @return boolean
   */
  static intersect(objectA: any, objectB: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private msrid: number;
  get srid(): number {
    return this.msrid;
  }
  set srid(value: number) {
    this.msrid = value;
  }
  
  /**
   * 
   */
  private mfeatureType: any;
  get featureType(): any {
    return this.mfeatureType;
  }
  set featureType(value: any) {
    this.mfeatureType = value;
  }
}

export class GeoPoint {
  
  /**
   * @param gSText
   * @return any
   */
  fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeography(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toString(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoJson(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toWKT(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param point
   * @return number
   */
  distance(point: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param object
   * @return boolean
   */
  intersect(object: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNull(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setNull(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setEmpty(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNullOrEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param latitude
   * @param longitude
   * @return any
   */
  static new(latitude: number, longitude: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param pointFrom
   * @param pointTo
   * @return number
   */
  static distance(pointFrom: any, pointTo: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mlongitude: number;
  get longitude(): number {
    return this.mlongitude;
  }
  set longitude(value: number) {
    this.mlongitude = value;
  }
  
  /**
   * 
   */
  private mlatitude: number;
  get latitude(): number {
    return this.mlatitude;
  }
  set latitude(value: number) {
    this.mlatitude = value;
  }
  
  /**
   * 
   */
  private msrid: number;
  get srid(): number {
    return this.msrid;
  }
  set srid(value: number) {
    this.msrid = value;
  }
}

export class GeoLine {
  
  /**
   * @param gSText
   * @return any
   */
  fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeography(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toString(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoJson(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toWkt(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param object
   * @return boolean
   */
  intersect(object: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNull(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setNull(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setEmpty(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNullOrEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param objectA
   * @param objectB
   * @return boolean
   */
  static intersect(objectA: any, objectB: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private msrid: number;
  get srid(): number {
    return this.msrid;
  }
  set srid(value: number) {
    this.msrid = value;
  }
}

export class GeoPolygon {
  
  /**
   * @param gSText
   * @return any
   */
  fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeography(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toString(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toGeoJson(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toWkt(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param object
   * @return boolean
   */
  intersect(object: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return number
   */
  area(): number {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNull(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setNull(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setEmpty(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNullOrEmpty(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromString(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromWkt(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param gSText
   * @return any
   */
  static fromGeoJson(gSText: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param objectA
   * @param objectB
   * @return boolean
   */
  static intersect(objectA: any, objectB: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param objectA
   * @return number
   */
  static area(objectA: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private msrid: number;
  get srid(): number {
    return this.msrid;
  }
  set srid(value: number) {
    this.msrid = value;
  }
}

export class WSAddressing {
  
  /**
   * 
   */
  private mto: any;
  get to(): any {
    return this.mto;
  }
  set to(value: any) {
    this.mto = value;
  }
  
  /**
   * 
   */
  private maction: any;
  get action(): any {
    return this.maction;
  }
  set action(value: any) {
    this.maction = value;
  }
  
  /**
   * 
   */
  private mmessageID: any;
  get messageID(): any {
    return this.mmessageID;
  }
  set messageID(value: any) {
    this.mmessageID = value;
  }
  
  /**
   * 
   */
  private mfrom: any;
  get from(): any {
    return this.mfrom;
  }
  set from(value: any) {
    this.mfrom = value;
  }
  
  /**
   * 
   */
  private mreplyTo: any;
  get replyTo(): any {
    return this.mreplyTo;
  }
  set replyTo(value: any) {
    this.mreplyTo = value;
  }
  
  /**
   * 
   */
  private mfaultTo: any;
  get faultTo(): any {
    return this.mfaultTo;
  }
  set faultTo(value: any) {
    this.mfaultTo = value;
  }
}

export class WSAddressingEndPoint {
  
  /**
   * 
   */
  private maddress: any;
  get address(): any {
    return this.maddress;
  }
  set address(value: any) {
    this.maddress = value;
  }
  
  /**
   * 
   */
  private mportType: any;
  get portType(): any {
    return this.mportType;
  }
  set portType(value: any) {
    this.mportType = value;
  }
  
  /**
   * 
   */
  private mserviceName: any;
  get serviceName(): any {
    return this.mserviceName;
  }
  set serviceName(value: any) {
    this.mserviceName = value;
  }
  
  /**
   * 
   */
  private mproperties: any;
  get properties(): any {
    return this.mproperties;
  }
  set properties(value: any) {
    this.mproperties = value;
  }
  
  /**
   * 
   */
  private mparameters: any;
  get parameters(): any {
    return this.mparameters;
  }
  set parameters(value: any) {
    this.mparameters = value;
  }
}

export class WSSecurity {
  
  /**
   * 
   */
  private msignature: any;
  get signature(): any {
    return this.msignature;
  }
  set signature(value: any) {
    this.msignature = value;
  }
  
  /**
   * 
   */
  private mencryption: any;
  get encryption(): any {
    return this.mencryption;
  }
  set encryption(value: any) {
    this.mencryption = value;
  }
  
  /**
   * 
   */
  private static mbINARYSECURITYTOKEN: number;
  static get bINARYSECURITYTOKEN(): number {
    return this.mbINARYSECURITYTOKEN;
  }
  
  
  /**
   * 
   */
  private static miSSUERSERIAL: number;
  static get iSSUERSERIAL(): number {
    return this.miSSUERSERIAL;
  }
  
  
  /**
   * 
   */
  private static mx509KEYIDENTIFIER: number;
  static get x509KEYIDENTIFIER(): number {
    return this.mx509KEYIDENTIFIER;
  }
  
  
  /**
   * 
   */
  private static msKIKEYIDENTIFIER: number;
  static get sKIKEYIDENTIFIER(): number {
    return this.msKIKEYIDENTIFIER;
  }
  
  
  /**
   * 
   */
  private static mtHUMBPRINTIDENTIFIER: number;
  static get tHUMBPRINTIDENTIFIER(): number {
    return this.mtHUMBPRINTIDENTIFIER;
  }
  
  
  /**
   * 
   */
  private static mkEYVALUE: number;
  static get kEYVALUE(): number {
    return this.mkEYVALUE;
  }
  
}

export class WSSignature {
  
  /**
   * 
   */
  private mkeystore: any;
  get keystore(): any {
    return this.mkeystore;
  }
  set keystore(value: any) {
    this.mkeystore = value;
  }
  
  /**
   * 
   */
  private malias: any;
  get alias(): any {
    return this.malias;
  }
  set alias(value: any) {
    this.malias = value;
  }
  
  /**
   * 
   */
  private mkeyIdentifierType: number;
  get keyIdentifierType(): number {
    return this.mkeyIdentifierType;
  }
  set keyIdentifierType(value: number) {
    this.mkeyIdentifierType = value;
  }
}

export class WSEncryption {
  
  /**
   * 
   */
  private mkeystore: any;
  get keystore(): any {
    return this.mkeystore;
  }
  set keystore(value: any) {
    this.mkeystore = value;
  }
  
  /**
   * 
   */
  private malias: any;
  get alias(): any {
    return this.malias;
  }
  set alias(value: any) {
    this.malias = value;
  }
  
  /**
   * 
   */
  private mkeyIdentifierType: number;
  get keyIdentifierType(): number {
    return this.mkeyIdentifierType;
  }
  set keyIdentifierType(value: number) {
    this.mkeyIdentifierType = value;
  }
}

export class WSSecurityKeyStore {
  
  /**
   * 
   */
  private mtype: any;
  get type(): any {
    return this.mtype;
  }
  set type(value: any) {
    this.mtype = value;
  }
  
  /**
   * 
   */
  private mpassword: any;
  get password(): any {
    return this.mpassword;
  }
  set password(value: any) {
    this.mpassword = value;
  }
  
  /**
   * 
   */
  private msource: any;
  get source(): any {
    return this.msource;
  }
  set source(value: any) {
    this.msource = value;
  }
  
  /**
   * 
   */
  private static mjKS: any;
  static get jKS(): any {
    return this.mjKS;
  }
  
  
  /**
   * 
   */
  private static mjCEKS: any;
  static get jCEKS(): any {
    return this.mjCEKS;
  }
  
  
  /**
   * 
   */
  private static mpKCS11: any;
  static get pKCS11(): any {
    return this.mpKCS11;
  }
  
}

export class Cache {
  
  /**
   * @param name
   * @return any
   */
  static getCache(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static clearAllCaches(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param key
   * @param value
   * @param durationMinutes
   * @return any
   */
  set(key: any, value: any, durationMinutes: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param key
   * @return any
   */
  get(key: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param key
   * @return boolean
   */
  contains(key: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param key
   * @return any
   */
  remove(key: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  clear(): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private static mdatabase: any;
  static get database(): any {
    return this.mdatabase;
  }
  
  
  /**
   * 
   */
  private static msmartDevices: any;
  static get smartDevices(): any {
    return this.msmartDevices;
  }
  
}

export class StorageProvider {
  
  /**
   * @param storageObjectFullName
   * @param outExternalFile
   * @param expirationMinutes
   * @param outMessages
   * @return boolean
   */
  getPrivate(storageObjectFullName: any, outExternalFile: any, expirationMinutes: number, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param fileFullPath
   * @param storageObjectFullName
   * @param outUploadedFile
   * @param outMessages
   * @return boolean
   */
  uploadPrivate(fileFullPath: any, storageObjectFullName: any, outUploadedFile: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param storageObjectFullName
   * @param outExternalFile
   * @param outMessages
   * @return boolean
   */
  get(storageObjectFullName: any, outExternalFile: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param fileFullPath
   * @param storageObjectFullName
   * @param outUploadedFile
   * @param outMessages
   * @return boolean
   */
  upload(fileFullPath: any, storageObjectFullName: any, outUploadedFile: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param storageObjectFullName
   * @param outLocalFile
   * @param outMessages
   * @return boolean
   */
  download(storageObjectFullName: any, outLocalFile: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param storageObjectFullName
   * @param outLocalFile
   * @param outMessages
   * @return boolean
   */
  downloadPrivate(storageObjectFullName: any, outLocalFile: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param storageDirectoryFullName
   * @param outExternalDirectory
   * @param outMessages
   * @return boolean
   */
  getDirectory(storageDirectoryFullName: any, outExternalDirectory: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
}

// Type: Synchronization

/**
 * @return number
 */
export function receive(): number {
  notImplemented();
  return null;
}

/**
 * @return number
 */
export function serverStatus(): number {
  notImplemented();
  return null;
}

/**
 * @return number
 */
export function send(): number {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function resetOfflineDatabase(): any {
  notImplemented();
  return null;
}

/**
 * @return number
 */
export function setSendCheckpoint(): number {
  notImplemented();
  return null;
}
// end Type

// Type: ArrayPEM
// end Type

export class VariablePEM {
  
  /**
   * @return any
   */
  setEmpty(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toFormattedString(): any {
    notImplemented();
    return null;
  }
}

export class DomainPEM {
  
  /**
   * @param expression
   * @return any
   */
  convert(expression: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  elements(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param enumeratedValue
   * @return any
   */
  enumerationDescription(enumeratedValue: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param enumeratedValue
   * @return any
   */
  enumerationImage(enumeratedValue: any): any {
    notImplemented();
    return null;
  }
}

export class GXProgramMetadata {
  
  /**
   * @param att
   * @return any
   */
  link(att: any): any {
    notImplemented();
    return null;
  }
}

export class SDObject {
  
  /**
   * @param att
   * @return any
   */
  call(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param att
   * @return any
   */
  create(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param att
   * @return any
   */
  link(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mcallOptions: any;
  get callOptions(): any {
    return this.mcallOptions;
  }
  set callOptions(value: any) {
    this.mcallOptions = value;
  }
}

export class GXProgram {
  
  /**
   * @param att
   * @return any
   */
  call(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param att
   * @return any
   */
  create(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param att
   * @return any
   */
  link(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param parameter
   * @return any
   */
  popup(parameter: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param submitParameters
   * @param att
   * @return any
   */
  submit(submitParameters: any, att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param att
   * @return any
   */
  udp(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param att
   * @return any
   */
  udf(att: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mtype: any;
  get type(): any {
    return this.mtype;
  }
  set type(value: any) {
    this.mtype = value;
  }
  
  /**
   * 
   */
  private mcallOptions: any;
  get callOptions(): any {
    return this.mcallOptions;
  }
  set callOptions(value: any) {
    this.mcallOptions = value;
  }
}

export class GXDataSelector {
  
  /**
   * @param att
   * @return any
   */
  call(att: any): any {
    notImplemented();
    return null;
  }
}

export class ImagePEMs {
  
  /**
   * @return any
   */
  link(): any {
    notImplemented();
    return null;
  }
}

export class OutputGroup {
  
  /**
   * @param parameter
   * @return any
   */
  insert(parameter: any): any {
    notImplemented();
    return null;
  }
}

// Type: BusinessComponentLevel
// end Type

export class BusinessComponent {
  
  /**
   * @return any
   */
  check(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  delete(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param primaryKeyAtt
   * @return any
   */
  load(primaryKeyAtt: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  mode(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  save(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param includeHeader
   * @param includeState
   * @return any
   */
  toXml(includeHeader: boolean, includeState: boolean): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param xml
   * @param outMessages
   * @return boolean
   */
  fromXml(xml: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param xml
   * @param outMessages
   * @return boolean
   */
  fromXmlFile(xml: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param includeState
   * @return any
   */
  toJson(includeState: boolean): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromJson(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromJsonFile(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  update(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  insert(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  insertOrUpdate(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  success(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  fail(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getMessages(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  clone(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  static createBC(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  static createCollection(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @return any
   */
  getValue(name: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param name
   * @param value
   * @return any
   */
  setValue(name: any, value: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getMetadata(): any {
    notImplemented();
    return null;
  }
}

export class AttributePEM {
  
  /**
   * @return any
   */
  setNull(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  isNull(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setEmpty(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  getOldValue(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  toFormattedString(): any {
    notImplemented();
    return null;
  }
}

export class BasedOnEnumeratedDomain {
  
  /**
   * @return any
   */
  enumerationDescription(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  enumerationImage(): any {
    notImplemented();
    return null;
  }
}

export class SDT {
  
  /**
   * @param includeHeader
   * @param includeState
   * @return any
   */
  toXml(includeHeader: boolean, includeState: boolean): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromXml(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromXmlFile(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  clone(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param includeState
   * @return any
   */
  toJson(includeState: boolean): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromJson(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param source
   * @param outMessages
   * @return boolean
   */
  fromJsonFile(source: any, outMessages: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  isNull(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  setNull(): any {
    notImplemented();
    return null;
  }
}

export class SDTItem {
  
  /**
   * @return any
   */
  toFormattedString(): any {
    notImplemented();
    return null;
  }
}

export class Iterator {
  
  /**
   * @return any
   */
  first(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  next(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return boolean
   */
  eof(): boolean {
    notImplemented();
    return null;
  }
}

// Type: 
// end Type

// Type: Void
// end Type

// Type: GxImage
// end Type

// Type: Timezones
// end Type

// Type: Short
// end Type

// Type: Object
// end Type

// Type: Messages
// end Type

// Type: Int
// end Type

// Type: GxControlFrame
// end Type

// Type: CallEffect
// end Type

// Type: CallType
// end Type

// Type: TargetSize
// end Type

// Type: DipOrPercentage
// end Type

export class GeneXusCommonUIProgress {
  
  /**
   * @return any
   */
  static show(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param title
   * @return any
   */
  static showWithTitle(title: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param title
   * @param description
   * @return any
   */
  static showWithTitleAndDescription(title: any, description: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static hide(): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private static mclass: any;
  static get class(): any {
    return this.mclass;
  }
  static set class(value: any) {
    this.mclass = value;
  }
  
  /**
   * 
   */
  private static mtype: any;
  static get type(): any {
    return this.mtype;
  }
  static set type(value: any) {
    this.mtype = value;
  }
  
  /**
   * 
   */
  private static mtitle: any;
  static get title(): any {
    return this.mtitle;
  }
  static set title(value: any) {
    this.mtitle = value;
  }
  
  /**
   * 
   */
  private static mdescription: any;
  static get description(): any {
    return this.mdescription;
  }
  static set description(value: any) {
    this.mdescription = value;
  }
  
  /**
   * 
   */
  private static mmaxValue: any;
  static get maxValue(): any {
    return this.mmaxValue;
  }
  static set maxValue(value: any) {
    this.mmaxValue = value;
  }
  
  /**
   * 
   */
  private static mvalue: any;
  static get value(): any {
    return this.mvalue;
  }
  static set value(value: any) {
    this.mvalue = value;
  }
}

// Type: GeneXusCommonUINavigation

/**
 * Makes a target visible. For example, ShowTarget(&quot;Left&quot;) opens the Drawer in an app with Slide Navigation.
 * @param targetName
 * @return any
 */
export function showTarget(targetName: any): any {
  notImplemented();
  return null;
}

/**
 * @param targetName
 * @return any
 */
export function hideTarget(targetName: any): any {
  notImplemented();
  return null;
}

/**
 * @param targetName
 * @return any
 */
export function expandTarget(targetName: any): any {
  notImplemented();
  return null;
}

/**
 * @param targetName
 * @return any
 */
export function collapseTarget(targetName: any): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusCommonConfigurationConfigurationManager

/**
 * @param propName
 * @param fileName
 * @return any
 */
export function getValue(propName: any, fileName: any): any {
  notImplemented();
  return null;
}

/**
 * @param propName
 * @param fileName
 * @return boolean
 */
export function hasValue(propName: any, fileName: any): boolean {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusCommonClipboard

/**
 * @param data
 * @return any
 */
export function setText(data: any): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function getText(): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusCommonAnalytics

/**
 * @param viewName
 * @return any
 */
export function trackView(viewName: any): any {
  notImplemented();
  return null;
}

/**
 * @param category
 * @param action
 * @param label
 * @param value
 * @return any
 */
export function trackEvent(category: any, action: any, label: any, value: number): any {
  notImplemented();
  return null;
}

/**
 * @param purchaseInfo
 * @return any
 */
export function trackPurchase(purchaseInfo: any): any {
  notImplemented();
  return null;
}

/**
 * @param userId
 * @return any
 */
export function setAnalyticsUserId(userId: any): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusCommonGeolocation {
  
  /**
   * Returns the current location for the device
   * @param minAccuracy
   * @param timeout
   * @param includeHeadingAndSpeed
   * @param ignoreErrors
   * @return any
   */
  static getMyLocation(minAccuracy: any, timeout: any, includeHeadingAndSpeed: boolean, ignoreErrors: boolean): any {
    notImplemented();
    return null;
  }
  
  /**
   * Indicates wether the application has been given permission to use location services
   * @return boolean
   */
  static authorized(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Indicates wether location services are enable in the device
   * @return boolean
   */
  static serviceEnabled(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Starts generating tracking information
   * @param changesInterval
   * @param distance
   * @param action
   * @param actionTimeInterval
   * @param accuracy
   * @return any
   */
  static startTracking(changesInterval: any, distance: any, action: any, actionTimeInterval: any, accuracy: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Stops the generation of tracking information
   * @return any
   */
  static endTracking(): any {
    notImplemented();
    return null;
  }
  
  /**
   * Returns a collection of location information generated by the tracking methods
   * @param startTime
   * @return any
   */
  static getLocationHistory(startTime: Date): any {
    notImplemented();
    return null;
  }
  
  /**
   * Removes all previous location information generated by the tracking methods
   * @return any
   */
  static clearLocationHistory(): any {
    notImplemented();
    return null;
  }
  
  /**
   * Returns the latitude of the given location
   * @param location
   * @return number
   */
  static getLatitude(location: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * Returns the longitude of the given location
   * @param location
   * @return number
   */
  static getLongitude(location: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * Returns the distance between the two locations given
   * @param fromLocation
   * @param toLocation
   * @return number
   */
  static getDistance(fromLocation: any, toLocation: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * Returns a collection of addresses for the given location
   * @param location
   * @return any
   */
  static getAddress(location: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Returns a collection of locations for the given address
   * @param address
   * @return any
   */
  static getLocation(address: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param proximityAlerts
   * @return boolean
   */
  static setProximityAlerts(proximityAlerts: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static getProximityAlerts(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static getCurrentProximityAlert(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static clearProximityAlerts(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param geoLocationPickerParameters
   * @return any
   */
  static pickLocation(geoLocationPickerParameters: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Returns the current authorization status.
   */
  private static mauthorizationStatus: any;
  static get authorizationStatus(): any {
    return this.mauthorizationStatus;
  }
  
}

// Type: GeneXusCommonServer

/**
 * @return any
 */
export function invalidateCache(): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusCommonRuntime {
  
  /**
   * 
   */
  private static menvironment: any;
  static get environment(): any {
    return this.menvironment;
  }
  
}

// Type: GeneXusCommonLog

/**
 * @param message
 * @param topic
 * @param logLevel
 * @return any
 */
export function write(message: any, topic: any, logLevel: any): any {
  notImplemented();
  return null;
}

/**
 * @param message
 * @param topic
 * @return any
 */
export function logError(message: any, topic: any): any {
  notImplemented();
  return null;
}

/**
 * @param message
 * @param topic
 * @return any
 */
export function warning(message: any, topic: any): any {
  notImplemented();
  return null;
}

/**
 * @param message
 * @param topic
 * @return any
 */
export function info(message: any, topic: any): any {
  notImplemented();
  return null;
}

/**
 * @param message
 * @param topic
 * @return any
 */
export function debug(message: any, topic: any): any {
  notImplemented();
  return null;
}

/**
 * @param message
 * @param topic
 * @return any
 */
export function fatal(message: any, topic: any): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusCommonMaps

/**
 * @param sourceLocation
 * @param destinationLocation
 * @param transportType
 * @param requestAlternateRoutes
 * @return any
 */
export function calculateDirections(sourceLocation: any, destinationLocation: any, transportType: any, requestAlternateRoutes: boolean): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusClientClientInformation {
  
  /**
   * 
   */
  private static mid: any;
  static get id(): any {
    return this.mid;
  }
  
  
  /**
   * 
   */
  private static moSName: any;
  static get oSName(): any {
    return this.moSName;
  }
  
  
  /**
   * 
   */
  private static moSVersion: any;
  static get oSVersion(): any {
    return this.moSVersion;
  }
  
  
  /**
   * 
   */
  private static mnetworkID: any;
  static get networkID(): any {
    return this.mnetworkID;
  }
  
  
  /**
   * 
   */
  private static mlanguage: any;
  static get language(): any {
    return this.mlanguage;
  }
  
  
  /**
   * 
   */
  private static mdeviceType: any;
  static get deviceType(): any {
    return this.mdeviceType;
  }
  
  
  /**
   * 
   */
  private static mplatformName: any;
  static get platformName(): any {
    return this.mplatformName;
  }
  
  
  /**
   * 
   */
  private static mappVersionCode: any;
  static get appVersionCode(): any {
    return this.mappVersionCode;
  }
  
  
  /**
   * 
   */
  private static mappVersionName: any;
  static get appVersionName(): any {
    return this.mappVersionName;
  }
  
  
  /**
   * 
   */
  private static mapplicationId: any;
  static get applicationId(): any {
    return this.mapplicationId;
  }
  
}

// Type: GeneXusClientClientStorage

/**
 * @param key
 * @param value
 * @return any
 */
export function setValue(key: any, value: any): any {
  notImplemented();
  return null;
}

/**
 * @param key
 * @param value
 * @return any
 */
export function secureSet(key: any, value: any): any {
  notImplemented();
  return null;
}

/**
 * @param key
 * @return any
 */
export function get(key: any): any {
  notImplemented();
  return null;
}

/**
 * @param key
 * @return any
 */
export function remove(key: any): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function clear(): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusClientSocket {
  
  /**
   * @param url
   * @return any
   */
  static open(url: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static close(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param msg
   * @return any
   */
  static send(msg: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private static mstatus: any;
  static get status(): any {
    return this.mstatus;
  }
  static set status(value: any) {
    this.mstatus = value;
  }
}

export class GeneXusSocialFacebook {
  
  /**
   * @param name
   * @param caption
   * @param description
   * @param link
   * @param picture
   * @return any
   */
  static postToWall(name: any, caption: any, description: any, link: any, picture: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param link
   * @return any
   */
  static shareLink(link: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param image
   * @return any
   */
  static shareImage(image: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param video
   * @return any
   */
  static shareVideo(video: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Access Token for interacting with FB Graph API
   */
  private static maccessToken: any;
  static get accessToken(): any {
    return this.maccessToken;
  }
  
}

// Type: GeneXusSocialTwitter

/**
 * @param text
 * @param image
 * @return any
 */
export function tweet(text: any, image: any): any {
  notImplemented();
  return null;
}

/**
 * @param userName
 * @return any
 */
export function follow(userName: any): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSocialShare

/**
 * @param text
 * @param url
 * @param title
 * @return any
 */
export function shareText(text: any, url: any, title: any): any {
  notImplemented();
  return null;
}

/**
 * @param image
 * @param text
 * @param url
 * @param title
 * @return any
 */
export function shareImage(image: any, text: any, url: any, title: any): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusServerSocket {
  
  /**
   * @param sdtNotification
   * @return number
   */
  notify(sdtNotification: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param clientId
   * @param sdtNotification
   * @return number
   */
  notifyClient(clientId: any, sdtNotification: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param sdtNotification
   * @return any
   */
  broadcast(sdtNotification: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param clientId
   * @param message
   * @return number
   */
  notifyClientText(clientId: any, message: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private mclientId: any;
  get clientId(): any {
    return this.mclientId;
  }
  
  
  /**
   * 
   */
  private merrCode: number;
  get errCode(): number {
    return this.merrCode;
  }
  
  
  /**
   * 
   */
  private merrDescription: any;
  get errDescription(): any {
    return this.merrDescription;
  }
  
}

// Type: GeneXusSDSynchronizationSynchronizationEvents

/**
 * @param eventStatus
 * @return boolean
 */
export function hasEvents(eventStatus: any): boolean {
  notImplemented();
  return null;
}

/**
 * @param eventStatus
 * @return any
 */
export function getEvents(eventStatus: any): any {
  notImplemented();
  return null;
}

/**
 * @param eventGUID
 * @return any
 */
export function markEventAsPending(eventGUID: any): any {
  notImplemented();
  return null;
}

/**
 * @param eventGUID
 * @return any
 */
export function removeEvent(eventGUID: any): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSDSynchronizationSynchronization
// end Type

// Type: GeneXusSDiOSPermissions

/**
 * Requests permission to alert the user. Typically, you make this request if your app uses local or push notifications to alert the user to new information involving your app.
 * @return any
 */
export function requestUserNotificationsPermission(): any {
  notImplemented();
  return null;
}

/**
 * Requests permission to use location services while the app is in the foreground.
 * @return any
 */
export function requestLocationPermissionWhenInUse(): any {
  notImplemented();
  return null;
}

/**
 * Requests permission to use location services whenever the app is running.
 * @return any
 */
export function requestLocationPermissionAlways(): any {
  notImplemented();
  return null;
}

/**
 * Deprecated. Use RequestUserNotificationsPermission instead.
 * @return any
 */
export function requestRemoteNotificationsPermission(): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusSDStoreStoreManager {
  
  /**
   * @param productIdentifiers
   * @return any
   */
  static getProducts(productIdentifiers: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param productIdentifier
   * @param quantity
   * @return any
   */
  static purchaseProduct(productIdentifier: any, quantity: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static getPurchases(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param productIdentifier
   * @return boolean
   */
  static consumeProduct(productIdentifier: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Restore transactions (iOS only)
   * @return any
   */
  static restorePurchases(): any {
    notImplemented();
    return null;
  }
  
  /**
   * If user device can make purchases
   */
  private static mcanMakePurchases: boolean;
  static get canMakePurchases(): boolean {
    return this.mcanMakePurchases;
  }
  
}

export class GeneXusSDNotificationsNotificationsConfiguration {
  
  /**
   * 
   */
  private miOScertificate: any;
  get iOScertificate(): any {
    return this.miOScertificate;
  }
  set iOScertificate(value: any) {
    this.miOScertificate = value;
  }
  
  /**
   * 
   */
  private miOScertificatePassword: any;
  get iOScertificatePassword(): any {
    return this.miOScertificatePassword;
  }
  set iOScertificatePassword(value: any) {
    this.miOScertificatePassword = value;
  }
  
  /**
   * 
   */
  private miOSuseSandboxServer: boolean;
  get iOSuseSandboxServer(): boolean {
    return this.miOSuseSandboxServer;
  }
  set iOSuseSandboxServer(value: boolean) {
    this.miOSuseSandboxServer = value;
  }
  
  /**
   * 
   */
  private mandroidSenderId: any;
  get androidSenderId(): any {
    return this.mandroidSenderId;
  }
  set androidSenderId(value: any) {
    this.mandroidSenderId = value;
  }
  
  /**
   * 
   */
  private mandroidSenderAPIKey: any;
  get androidSenderAPIKey(): any {
    return this.mandroidSenderAPIKey;
  }
  set androidSenderAPIKey(value: any) {
    this.mandroidSenderAPIKey = value;
  }
  
  /**
   * 
   */
  private mwNSPackageSecurityIdentifier: any;
  get wNSPackageSecurityIdentifier(): any {
    return this.mwNSPackageSecurityIdentifier;
  }
  set wNSPackageSecurityIdentifier(value: any) {
    this.mwNSPackageSecurityIdentifier = value;
  }
  
  /**
   * 
   */
  private mwNSClientSecret: any;
  get wNSClientSecret(): any {
    return this.mwNSClientSecret;
  }
  set wNSClientSecret(value: any) {
    this.mwNSClientSecret = value;
  }
}

export class GeneXusSDNotificationsRemoteNotificationResult {
  
  /**
   * 
   */
  private merrorCode: number;
  get errorCode(): number {
    return this.merrorCode;
  }
  
  
  /**
   * 
   */
  private merrorDescription: any;
  get errorDescription(): any {
    return this.merrorDescription;
  }
  
  
  /**
   * 
   */
  private mdeviceType: any;
  get deviceType(): any {
    return this.mdeviceType;
  }
  
  
  /**
   * 
   */
  private mdeviceToken: any;
  get deviceToken(): any {
    return this.mdeviceToken;
  }
  
}

export class GeneXusSDNotificationsNotificationParameters {
  
  /**
   * @param name
   * @param value
   * @return any
   */
  setParameter(name: any, value: any): any {
    notImplemented();
    return null;
  }
}

export class GeneXusSDNotificationsRemoteNotifications {
  
  /**
   * @param applicationId
   * @param deviceType
   * @param deviceToken
   * @param alertMessage
   * @return number
   */
  call(applicationId: any, deviceType: any, deviceToken: any, alertMessage: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param applicationId
   * @param deviceToken
   * @param badgeNumber
   * @param sound
   * @return number
   */
  iOSSetBadge(applicationId: any, deviceToken: any, badgeNumber: number, sound: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param applicationId
   * @param deviceToken
   * @return number
   */
  iOSResetBadge(applicationId: any, deviceToken: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param applicationId
   * @param deviceType
   * @param deviceToken
   * @param alertMessage
   * @param actionName
   * @param parameters
   * @return any
   */
  callAction(applicationId: any, deviceType: any, deviceToken: any, alertMessage: any, actionName: any, parameters: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param applicationId
   * @return number
   */
  openSession(applicationId: any): number {
    notImplemented();
    return null;
  }
  
  /**
   * @param remoteNotification
   * @return any
   */
  add(remoteNotification: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  send(): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param applicationId
   * @param configuration
   * @return any
   */
  setConfiguration(applicationId: any, configuration: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private merrorCode: number;
  get errorCode(): number {
    return this.merrorCode;
  }
  
  
  /**
   * 
   */
  private merrorDescription: any;
  get errorDescription(): any {
    return this.merrorDescription;
  }
  
}

// Type: GeneXusSDNotificationsLocalNotifications

/**
 * @param alerts
 * @return number
 */
export function createAlerts(alerts: any): number {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function listAlerts(): any {
  notImplemented();
  return null;
}

/**
 * @param alerts
 * @return number
 */
export function removeAlerts(alerts: any): number {
  notImplemented();
  return null;
}

/**
 * @return number
 */
export function removeAllAlerts(): number {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSDMediaCamera

/**
 * @return any
 */
export function takePhoto(): any {
  notImplemented();
  return null;
}

/**
 * @param videoQuality
 * @return any
 */
export function recordVideo(videoQuality: any): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSDMediaPhotoLibrary

/**
 * @param image
 * @return any
 */
export function savePhoto(image: any): any {
  notImplemented();
  return null;
}

/**
 * @param video
 * @return any
 */
export function saveVideo(video: any): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function chooseImage(): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function chooseVideo(): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function chooseImages(): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSDMediaAudio

/**
 * Plays the given audio with the specified category
 * @param audio
 * @param category
 * @return any
 */
export function play(audio: any, category: any): any {
  notImplemented();
  return null;
}

/**
 * Plays the given audio in background, keeps playing while the application is in background
 * @param audio
 * @param description
 * @return any
 */
export function playBackground(audio: any, description: any): any {
  notImplemented();
  return null;
}

/**
 * Stops the audio playing in all categories
 * @param category
 * @return any
 */
export function stop(category: any): any {
  notImplemented();
  return null;
}

/**
 * Returns whether there is audio playing in any category
 * @param category
 * @return boolean
 */
export function isPlaying(category: any): boolean {
  notImplemented();
  return null;
}

/**
 * Returns the current audio queue.
 * @return any
 */
export function getQueue(): any {
  notImplemented();
  return null;
}

/**
 * Returns the state of the current audio queue (including the position in the queue and inside the current playing item, if any).
 * @return any
 */
export function getQueueState(): any {
  notImplemented();
  return null;
}

/**
 * Sets the current audio queue. Stops current background playback, if any.
 * @param queue
 * @return any
 */
export function setQueue(queue: any): any {
  notImplemented();
  return null;
}

/**
 * Starts or resumes playback of the current audio queue.
 * @return any
 */
export function playQueue(): any {
  notImplemented();
  return null;
}

/**
 * Pauses playback of the current audio queue.
 * @return any
 */
export function pauseQueue(): any {
  notImplemented();
  return null;
}

/**
 * Sets the current item in the media queue, given its media id.
 * @param mediaId
 * @return any
 */
export function setQueueCurrentItem(mediaId: any): any {
  notImplemented();
  return null;
}

/**
 * Sets the current item in the media queue, given its index.
 * @param index
 * @return any
 */
export function setQueueCurrentIndex(index: any): any {
  notImplemented();
  return null;
}

/**
 * Allows configuring the audio player UI settings
 * @param settings
 * @return any
 */
export function setPlayerSettings(settings: any): any {
  notImplemented();
  return null;
}

/**
 * @param show
 * @return any
 */
export function iOSSetShowsMiniPlayer(show: boolean): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function iOSDisplayFullScreenPlayer(): any {
  notImplemented();
  return null;
}

/**
 * @return any
 */
export function iOSDismissFullScreenPlayer(): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusSDMediaAudioRecorder {
  
  /**
   * Starts a recording session. Returns True if the operation was successful, False otherwise
   * @return boolean
   */
  static start(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Stops the recording session and returns the URL of the recorder file.
   * @return any
   */
  static stop(): any {
    notImplemented();
    return null;
  }
  
  /**
   * True if there is an active recording session, False otherwise
   */
  private static misRecording: boolean;
  static get isRecording(): boolean {
    return this.misRecording;
  }
  
}

// Type: GeneXusSDActions

/**
 * Call this action to execute the standard batch login against the OAuth server.
 * @param user
 * @param password
 * @param additionalParameters
 * @return boolean
 */
export function login(user: any, password: any, additionalParameters: any): boolean {
  notImplemented();
  return null;
}

/**
 * Call this action to execute the batch login against the OAuth server for a External login type.
 * @param type
 * @param user
 * @param password
 * @param additionalParameters
 * @return boolean
 */
export function loginExternal(type: any, user: any, password: any, additionalParameters: any): boolean {
  notImplemented();
  return null;
}

/**
 * Call this action to execute the standard logout against the OAuth server.
 * @return any
 */
export function logout(): any {
  notImplemented();
  return null;
}

/**
 * Returns to the main object of the application, clearing the current call stack.
 * @return any
 */
export function goHome(): any {
  notImplemented();
  return null;
}

/**
 * Returns to the object specified in the parameter. If it is present more than once in the call stack, it will return to the most recent instance.
 * @param objectName
 * @return any
 */
export function returnTo(objectName: any): any {
  notImplemented();
  return null;
}

/**
 * Call this action to execute the standard save in the edit form in the device.
 * @return any
 */
export function save(): any {
  notImplemented();
  return null;
}

/**
 * Call this action to execute the standard cancel in the edit form in the device.
 * @return any
 */
export function cancel(): any {
  notImplemented();
  return null;
}

/**
 * Call this action to execute the standard delete in the edit form in the device.
 * @return any
 */
export function deleteAction(): any {
  notImplemented();
  return null;
}

/**
 * Takes an application screenshot for further use like sharing, save in library, etc.
 * @return any
 */
export function takeApplicationScreenshot(): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSDContacts

/**
 * Adds a contact to the device&#x27;s Address Book
 * @param firstName
 * @param lastName
 * @param eMail
 * @param phone
 * @param companyName
 * @param photo
 * @param message
 * @return boolean
 */
export function addContact(firstName: any, lastName: any, eMail: any, phone: any, companyName: any, photo: any, message: any): boolean {
  notImplemented();
  return null;
}

/**
 * @param firstName
 * @param lastName
 * @param eMail
 * @param phone
 * @param message
 * @return boolean
 */
export function removeContact(firstName: any, lastName: any, eMail: any, phone: any, message: any): boolean {
  notImplemented();
  return null;
}

/**
 * @param firstName
 * @param lastName
 * @param eMail
 * @param phone
 * @return any
 */
export function viewContact(firstName: any, lastName: any, eMail: any, phone: any): any {
  notImplemented();
  return null;
}

/**
 * Returns a collection of all the contacts in the device&#x27;s Address Book
 * @return any
 */
export function getAllContacts(): any {
  notImplemented();
  return null;
}
// end Type

// Type: GeneXusSDCalendar

/**
 * @param title
 * @param startDate
 * @param endDate
 * @param startTime
 * @param endTime
 * @param place
 * @return any
 */
export function schedule(title: any, startDate: Date, endDate: Date, startTime: any, endTime: any, place: any): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusSDInterop {
  
  /**
   * @param message
   * @param to
   * @return any
   */
  static sendMessage(message: any, to: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param video
   * @return any
   */
  static playVideo(video: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param audio
   * @return any
   */
  static playAudio(audio: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param phone
   * @return any
   */
  static placeCall(phone: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param to
   * @param subject
   * @param message
   * @return any
   */
  static sendEmail(to: any, subject: any, message: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param to
   * @param cc
   * @param bcc
   * @param subject
   * @param message
   * @return any
   */
  static sendEmailAdvanced(to: any, cc: any, bcc: any, subject: any, message: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param to
   * @param message
   * @return any
   */
  static sendSMS(to: any, message: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param message
   * @return any
   */
  static msg(message: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param message
   * @return boolean
   */
  static confirm(message: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Deprecated: use WebBrowser.Open instead
   * @param url
   * @return any
   */
  static openInBrowser(url: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param url
   * @return boolean
   */
  static canOpen(url: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param url
   * @return any
   */
  static open(url: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @return any
   */
  static clearCache(): any {
    notImplemented();
    return null;
  }
  
  /**
   * Deprecated: use Interop.SetBadgeNumber instead
   * @param num
   * @return any
   */
  static iOSSetBadgeNumber(num: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param num
   * @return any
   */
  static setBadgeNumber(num: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param text
   * @param tabIndex
   * @return any
   */
  static iOSSetBadgeTextToTabIndex(text: any, tabIndex: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param tabIndex
   * @return any
   */
  static iOSSetSelectedTabIndex(tabIndex: number): any {
    notImplemented();
    return null;
  }
  
  /**
   * DEPRECATED. Use AppLifecycle.ApplicationState instead.
   */
  private static mapplicationState: any;
  static get applicationState(): any {
    return this.mapplicationState;
  }
  
}

// Type: GeneXusSDScanner

/**
 * @param barcodeTypes
 * @return any
 */
export function scanBarcode(barcodeTypes: any): any {
  notImplemented();
  return null;
}

/**
 * @param beepOnEachRead
 * @param barcodeTypes
 * @return any
 */
export function scanInLoop(beepOnEachRead: boolean, barcodeTypes: any): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusSDNetwork {
  
  /**
   * @param url
   * @return boolean
   */
  static isServerAvailable(url: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * @param url
   * @return any
   */
  static type(url: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * @param url
   * @return boolean
   */
  static trafficBasedCost(url: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * If the property Dynamic Services URL is set to True, changes the URL at runtime.
   * @param url
   * @return any
   */
  static setApplicationServerURL(url: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private static mapplicationServerURL: any;
  static get applicationServerURL(): any {
    return this.mapplicationServerURL;
  }
  
}

export class GeneXusSDBeacons {
  
  /**
   * Start monitoring the specified beacon region.
   * @param proximityAlert
   * @return boolean
   */
  static addBeaconProximityAlert(proximityAlert: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Start monitoring the specified beacon regions.
   * @param proximityAlerts
   * @return boolean
   */
  static addBeaconProximityAlerts(proximityAlerts: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Retrieve a collection for the beacon regions that are currently being monitored.
   * @return any
   */
  static getBeaconProximityAlerts(): any {
    notImplemented();
    return null;
  }
  
  /**
   * Removes the beacon region being monitored.
   * @param proximityAlertRegionId
   * @return any
   */
  static removeBeaconProximityAlert(proximityAlertRegionId: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Removes all the beacon regions being monitored.
   * @return any
   */
  static clearBeaconProximityAlerts(): any {
    notImplemented();
    return null;
  }
  
  /**
   * Retrieve the cached state of the specified region.
   * @param regionId
   * @return any
   */
  static getBeaconRegionState(regionId: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Starts the delivery of notifications for beacons in the specified region.
   * @param beaconRegion
   * @return boolean
   */
  static startRangingBeaconRegion(beaconRegion: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Retrieve a collection for the beacon regions that are currently providing ranging.
   * @return any
   */
  static getRangedBeaconRegions(): any {
    notImplemented();
    return null;
  }
  
  /**
   * Stops the delivery of notifications for the specified beacon region.
   * @param regionId
   * @return any
   */
  static stopRangingBeaconRegion(regionId: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Retrieve a collection for the beacons (sorted by proximity) currently in range for the given region.
   * @param regionId
   * @return any
   */
  static getBeaconsInRange(regionId: any): any {
    notImplemented();
    return null;
  }
  
  /**
   * Advertises the current device as a beacon.
   * @param beaconInfo
   * @return boolean
   */
  static startAsBeacon(beaconInfo: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Stops advertising the current device as a beacon.
   * @return boolean
   */
  static stopAsBeacon(): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Determines whether the device supports ranging. If False, all attempts to range beacons will fail.
   */
  private static mrangingAvailable: boolean;
  static get rangingAvailable(): boolean {
    return this.mrangingAvailable;
  }
  
  
  /**
   * Determines whether the device supports beacon proximity alerts. If False, all attempts to set proximity alerts will fail.
   */
  private static mbeaconProximityAlertsAvailable: boolean;
  static get beaconProximityAlertsAvailable(): boolean {
    return this.mbeaconProximityAlertsAvailable;
  }
  
  
  /**
   * Determines whether the user has location services enabled. If False, and you proceed to call other Location API, user will be prompted with the warning or fail depending on the current authorization status.
   */
  private static mserviceEnabled: boolean;
  static get serviceEnabled(): boolean {
    return this.mserviceEnabled;
  }
  
  
  /**
   * Returns the current authorization status.
   */
  private static mauthorizationStatus: any;
  static get authorizationStatus(): any {
    return this.mauthorizationStatus;
  }
  
}

// Type: GeneXusSDSearch
// end Type

// Type: GeneXusSDDeepLink
// end Type

// Type: GeneXusSDWebBrowser

/**
 * Opens the give URL in the InApp Browser
 * @param url
 * @return any
 */
export function open(url: any): any {
  notImplemented();
  return null;
}

/**
 * Closes the InApp Browser
 * @return any
 */
export function close(): any {
  notImplemented();
  return null;
}
// end Type

export class GeneXusSDDeviceAuthentication {
  
  /**
   * Returns True if the API can be used in the current device, False otherwise
   * @param method
   * @return boolean
   */
  static isAvailable(method: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Performs the authentication step, using the method that corresponds for the current device.
   * @param method
   * @param title
   * @param usageDescription
   * @return boolean
   */
  static authenticate(method: any, title: any, usageDescription: any): boolean {
    notImplemented();
    return null;
  }
  
  /**
   * Returns the name of the biometrics authentication method available on the current device
   */
  private static mbiometricsDescription: any;
  static get biometricsDescription(): any {
    return this.mbiometricsDescription;
  }
  
  
  /**
   * Indicates the minimum time (in seconds) before asking the user to locally authenticate again after a successful authentication
   */
  private static mallowableReuseDuration: number;
  static get allowableReuseDuration(): number {
    return this.mallowableReuseDuration;
  }
  static set allowableReuseDuration(value: number) {
    this.mallowableReuseDuration = value;
  }
}

export class GeneXusSDAppLifecycle {
  
  /**
   * The runtime state of the application.
   */
  private static mapplicationState: any;
  static get applicationState(): any {
    return this.mapplicationState;
  }
  
}

export class GeneXusSDCardScanner {
  
  /**
   * @return any
   */
  static scanCard(): any {
    notImplemented();
    return null;
  }
  
  /**
   * 
   */
  private static misAvailable: boolean;
  static get isAvailable(): boolean {
    return this.misAvailable;
  }
  
  
  /**
   * 
   */
  private static mcollectCardholderName: boolean;
  static get collectCardholderName(): boolean {
    return this.mcollectCardholderName;
  }
  static set collectCardholderName(value: boolean) {
    this.mcollectCardholderName = value;
  }
  
  /**
   * 
   */
  private static mcollectCVV: boolean;
  static get collectCVV(): boolean {
    return this.mcollectCVV;
  }
  static set collectCVV(value: boolean) {
    this.mcollectCVV = value;
  }
  
  /**
   * 
   */
  private static mcollectExpiry: boolean;
  static get collectExpiry(): boolean {
    return this.mcollectExpiry;
  }
  static set collectExpiry(value: boolean) {
    this.mcollectExpiry = value;
  }
  
  /**
   * 
   */
  private static mcollectPostalCode: boolean;
  static get collectPostalCode(): boolean {
    return this.mcollectPostalCode;
  }
  static set collectPostalCode(value: boolean) {
    this.mcollectPostalCode = value;
  }
  
  /**
   * 
   */
  private static mdetectionMode: any;
  static get detectionMode(): any {
    return this.mdetectionMode;
  }
  static set detectionMode(value: any) {
    this.mdetectionMode = value;
  }
  
  /**
   * 
   */
  private static mdisableManualEntry: boolean;
  static get disableManualEntry(): boolean {
    return this.mdisableManualEntry;
  }
  static set disableManualEntry(value: boolean) {
    this.mdisableManualEntry = value;
  }
  
  /**
   * 
   */
  private static mrestrictPostalCodeNumeric: boolean;
  static get restrictPostalCodeNumeric(): boolean {
    return this.mrestrictPostalCodeNumeric;
  }
  static set restrictPostalCodeNumeric(value: boolean) {
    this.mrestrictPostalCodeNumeric = value;
  }
  
  /**
   * 
   */
  private static mscanExpiry: boolean;
  static get scanExpiry(): boolean {
    return this.mscanExpiry;
  }
  static set scanExpiry(value: boolean) {
    this.mscanExpiry = value;
  }
  
  /**
   * 
   */
  private static mscanInstructionsText: any;
  static get scanInstructionsText(): any {
    return this.mscanInstructionsText;
  }
  static set scanInstructionsText(value: any) {
    this.mscanInstructionsText = value;
  }
  
  /**
   * 
   */
  private static msuppressScanConfirmation: boolean;
  static get suppressScanConfirmation(): boolean {
    return this.msuppressScanConfirmation;
  }
  static set suppressScanConfirmation(value: boolean) {
    this.msuppressScanConfirmation = value;
  }
}

export class BlobFile {
  
  /**
   * File type
   */
  private mfileType: any;
  get fileType(): any {
    return this.mfileType;
  }
  set fileType(value: any) {
    this.mfileType = value;
  }
  
  /**
   * File Name
   */
  private mfileName: any;
  get fileName(): any {
    return this.mfileName;
  }
  
  
  /**
   * File URI
   */
  private mfileURI: any;
  get fileURI(): any {
    return this.mfileURI;
  }
  set fileURI(value: any) {
    this.mfileURI = value;
  }
}

export class VarChar {
  
  /**
   * National language support
   */
  private menablenationallanguagesupport: any;
  get enablenationallanguagesupport(): any {
    return this.menablenationallanguagesupport;
  }
  set enablenationallanguagesupport(value: any) {
    this.menablenationallanguagesupport = value;
  }
}
