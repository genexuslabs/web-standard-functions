{
  "metadataFilePath": "../../src/generator/metadata.json",
  "notImplementedOutputFilePath": "../../src/generator/out/not_implemented.ts",
  "angularMappingsOutputFilePath": "../../src/generator/out/angular_metadata.json",
  "angularIndexOutputFilePath": "../../src/index.ts",
  "angularMappings": {
    "defaultModulesPath": "./generator/out/not_implemented",
    "angularIndexPath": "@genexus/web-standard-functions/dist/lib-esm/index"
  },
  "implemented": {
    "Cookie": {
      "path": "./types/cookie"
    },
    "Core": {
      "members": {
        "Asc": {
          "path": "./text/asc",
          "name": "asc"
        },
        "Chr": {
          "path": "./text/chr",
          "name": "chr"
        },
        "Compare": {
          "path": "./misc/compare",
          "name": "compare"
        },
        "Concat": {
          "path": "./text/concat",
          "name": "concat"
        },
        "Format": {
          "path": "./text/format",
          "name": "format"
        },
        "FromBase64": {
          "path": "./text/fromBase64",
          "name": "fromBase64"
        },
        "GetCookie": {
          "path": "./web/getCookie",
          "name": "getCookie"
        },
        "GetLanguage": {
          "path": "./misc/getLanguage",
          "name": "getLanguage"
        },
        "HTMLClean": {
          "path": "./text/htmlClean",
          "name": "htmlClean"
        },
        "Iif": {
          "path": "./misc/iif",
          "name": "iif"
        },
        "Int": {
          "path": "./numeric/integer",
          "name": "integer",
          "alias": "int"
        },
        "Len": {
          "path": "./text/length",
          "name": "length",
          "alias": "len"
        },
        "Lower": {
          "path": "./text/toLower",
          "name": "toLower",
          "alias": "lower"
        },
        "LTrim": {
          "path": "./text/lTrim",
          "name": "ltrim"
        },
        "Mod": {
          "path": "./math/mod",
          "name": "mod"
        },
        "NewLine": {
          "path": "./text/newline",
          "name": "newLine"
        },
        "PadL": {
          "path": "./text/padLeft",
          "name": "padLeft",
          "alias": "padL"
        },
        "PadR": {
          "path": "./text/padRight",
          "name": "padRight",
          "alias": "padR"
        },
        "Round": {
          "path": "./numeric/round",
          "name": "round"
        },
        "RoundToEven": {
          "path": "./numeric/roundToEven",
          "name": "roundToEven"
        },
        "RTrim": {
          "path": "./text/rTrim",
          "name": "rTrim"
        },
        "SetCookie": {
          "path": "./web/setCookie",
          "name": "setCookie"
        },
        "SetLanguage": {
          "path": "./misc/setLanguage",
          "name": "setLanguage"
        },
        "Str": {
          "path": "./numeric/toString",
          "name": "toString",
          "alias": "str"
        },
        "StrReplace": {
          "path": "./text/replace",
          "name": "replace",
          "alias": "strReplace"
        },
        "StrSearch": {
          "path": "./text/indexOf",
          "name": "indexOf",
          "alias": "strSearch"
        },
        "StrSearchRev": {
          "path": "./text/lastIndexOf",
          "name": "lastIndexOf",
          "alias": "strSearchRev"
        },
        "Substr": {
          "path": "./text/subString",
          "name": "subString",
          "alias": "substr"
        },
        "ToBase64": {
          "path": "./text/toBase64",
          "name": "toBase64"
        },
        "Today": {
          "path": "./date/today",
          "name": "today"
        },
        "Now": {
          "path": "./datetime/now",
          "name": "now"
        },
        "Trim": {
          "path": "./text/trim",
          "name": "trim"
        },
        "Trunc": {
          "path": "./numeric/truncate",
          "name": "truncate",
          "alias": "trunc"
        },
        "Val": {
          "path": "./text/toNumeric",
          "name": "toNumeric",
          "alias": "val"
        },
        "Upper": {
          "path": "./text/toUpper",
          "name": "toUpper",
          "alias": "upper"
        },
        "XSLTApply": {
          "path": "./text/xsltApply",
          "name": "xsltApply"
        }
      }
    },
    "Character": {
      "members": {
        "CharAt": {
          "path": "./text/charAt",
          "name": "charAt",
          "alias": "cCharAt"
        },
        "Contains": {
          "path": "./text/contains",
          "name": "contains",
          "alias": "cContains"
        },
        "EndsWith": {
          "path": "./text/endsWith",
          "name": "endsWith",
          "alias": "cEndsWith"
        },
        "FromString": {
          "path": "./text/fromString",
          "name": "fromString",
          "alias": "cFromString"
        },
        "HTMLClean": {
          "path": "./text/htmlClean",
          "name": "htmlClean",
          "alias": "cHtmlClean"
        },
        "IndexOf": {
          "path": "./text/indexOf",
          "name": "indexOf",
          "alias": "cIndexOf"
        },
        "IsEmpty": {
          "path": "./text/isEmpty",
          "name": "isEmpty",
          "alias": "cIsEmpty"
        },
        "IsMatch": {
          "path": "./text/isMatch",
          "name": "isMatch",
          "alias": "cIsMatch"
        },
        "LastIndexOf": {
          "path": "./text/lastIndexOf",
          "name": "lastIndexOf",
          "alias": "cLastIndexOf"
        },
        "Length": {
          "path": "./text/length",
          "name": "length",
          "alias": "cLength"
        },
        "Matches": {
          "path": "./text/matches",
          "name": "matches",
          "alias": "cMatches"
        },
        "PadLeft": {
          "path": "./text/padLeft",
          "name": "padLeft",
          "alias": "cPadLeft"
        },
        "PadRight": {
          "path": "./text/padRight",
          "name": "padRight",
          "alias": "cPadRight"
        },
        "RemoveDiacritics": {
          "path": "./text/removeDiacritics",
          "name": "removeDiacritics",
          "alias": "cRemoveDiacritics"
        },
        "Replace": {
          "path": "./text/replace",
          "name": "replace",
          "alias": "cReplace"
        },
        "ReplaceRegEx": {
          "path": "./text/replaceRegExp",
          "name": "replaceRegExp",
          "alias": "cReplaceRegExp"
        },
        "SplitRegEx": {
          "path": "./text/splitRegExp",
          "name": "splitRegExp",
          "alias": "cSplitRegExp"
        },
        "StartsWith": {
          "path": "./text/startsWith",
          "name": "startsWith",
          "alias": "cStarsWith"
        },
        "Substring": {
          "path": "./text/subString",
          "name": "subString",
          "alias": "cSubString"
        },
        "ToLower": {
          "path": "./text/toLower",
          "name": "toLower",
          "alias": "cToLower"
        },
        "ToNumeric": {
          "path": "./text/toNumeric",
          "name": "toNumeric",
          "alias": "cToNumeric"
        },
        "ToString": {
          "path": "./text/toString",
          "name": "toString",
          "alias": "cToString"
        },
        "ToUpper": {
          "path": "./text/toUpper",
          "name": "toUpper",
          "alias": "cToUpper"
        },
        "Trim": {
          "path": "./text/trim",
          "name": "trim",
          "alias": "cTrim"
        },
        "TrimEnd": {
          "path": "./text/rTrim",
          "name": "rTrim",
          "alias": "cRTrim"
        },
        "TrimStart": {
          "path": "./text/lTrim",
          "name": "ltrim",
          "alias": "cLTrim"
        },
        "XSLTApply": {
          "path": "./text/xsltApply",
          "name": "xsltApply",
          "alias": "cXsltApply"
        }
      }
    },
    "Varchar": {
      "members": {
        "CharAt": {
          "path": "./text/charAt",
          "name": "charAt",
          "alias": "vCharAt"
        },
        "Contains": {
          "path": "./text/contains",
          "name": "contains",
          "alias": "vContains"
        },
        "EndsWith": {
          "path": "./text/endsWith",
          "name": "endsWith",
          "alias": "vEndsWith"
        },
        "FromString": {
          "path": "./text/fromString",
          "name": "fromString",
          "alias": "vFromString"
        },
        "HTMLClean": {
          "path": "./text/htmlClean",
          "name": "htmlClean",
          "alias": "vHtmlClean"
        },
        "IndexOf": {
          "path": "./text/indexOf",
          "name": "indexOf",
          "alias": "vIndexOf"
        },
        "IsEmpty": {
          "path": "./text/isEmpty",
          "name": "isEmpty",
          "alias": "vIsEmpty"
        },
        "IsMatch": {
          "path": "./text/isMatch",
          "name": "isMatch",
          "alias": "vIsMatch"
        },
        "LastIndexOf": {
          "path": "./text/lastIndexOf",
          "name": "lastIndexOf",
          "alias": "vLastIndexOf"
        },
        "Length": {
          "path": "./text/length",
          "name": "length",
          "alias": "vLength"
        },
        "Matches": {
          "path": "./text/matches",
          "name": "matches",
          "alias": "vMatches"
        },
        "PadLeft": {
          "path": "./text/padLeft",
          "name": "padLeft",
          "alias": "vPadLeft"
        },
        "PadRight": {
          "path": "./text/padRight",
          "name": "padRight",
          "alias": "vPadRight"
        },
        "RemoveDiacritics": {
          "path": "./text/removeDiacritics",
          "name": "removeDiacritics",
          "alias": "vRemoveDiacritics"
        },
        "Replace": {
          "path": "./text/replace",
          "name": "replace",
          "alias": "vReplace"
        },
        "ReplaceRegEx": {
          "path": "./text/replaceRegExp",
          "name": "replaceRegExp",
          "alias": "vReplaceRegExp"
        },
        "SplitRegEx": {
          "path": "./text/splitRegExp",
          "name": "splitRegExp",
          "alias": "vSplitRegExp"
        },
        "StartsWith": {
          "path": "./text/startsWith",
          "name": "startsWith",
          "alias": "vStartsWith"
        },
        "Substring": {
          "path": "./text/subString",
          "name": "subString",
          "alias": "vSubString"
        },
        "ToLower": {
          "path": "./text/toLower",
          "name": "toLower",
          "alias": "vToLower"
        },
        "ToNumeric": {
          "path": "./text/toNumeric",
          "name": "toNumeric",
          "alias": "vToNumeric"
        },
        "ToString": {
          "path": "./text/toString",
          "name": "toString",
          "alias": "vToString"
        },
        "ToUpper": {
          "path": "./text/toUpper",
          "name": "toUpper",
          "alias": "vToUpper"
        },
        "Trim": {
          "path": "./text/trim",
          "name": "trim",
          "alias": "vTrim"
        },
        "TrimEnd": {
          "path": "./text/rTrim",
          "name": "rTrim",
          "alias": "vRTrim"
        },
        "TrimStart": {
          "path": "./text/lTrim",
          "name": "ltrim",
          "alias": "vLTrim"
        },
        "XSLTApply": {
          "path": "./text/xsltApply",
          "name": "xsltApply",
          "alias": "vXsltApply"
        }
      }
    },
    "LongVarchar": {
      "members": {
        "CharAt": {
          "path": "./text/charAt",
          "name": "charAt",
          "alias": "lCharAt"
        },
        "Contains": {
          "path": "./text/contains",
          "name": "contains",
          "alias": "lContains"
        },
        "EndsWith": {
          "path": "./text/endsWith",
          "name": "endsWith",
          "alias": "lEndsWith"
        },
        "FromString": {
          "path": "./text/fromString",
          "name": "fromString",
          "alias": "lFromString"
        },
        "HTMLClean": {
          "path": "./text/htmlClean",
          "name": "htmlClean",
          "alias": "lHtmlClean"
        },
        "IndexOf": {
          "path": "./text/indexOf",
          "name": "indexOf",
          "alias": "lIndexOf"
        },
        "IsEmpty": {
          "path": "./text/isEmpty",
          "name": "isEmpty",
          "alias": "lIsEmpty"
        },
        "IsMatch": {
          "path": "./text/isMatch",
          "name": "isMatch",
          "alias": "lIsMatch"
        },
        "LastIndexOf": {
          "path": "./text/lastIndexOf",
          "name": "lastIndexOf",
          "alias": "lLastIndexOf"
        },
        "Length": {
          "path": "./text/length",
          "name": "length",
          "alias": "lLength"
        },
        "Matches": {
          "path": "./text/matches",
          "name": "matches",
          "alias": "lMatches"
        },
        "PadLeft": {
          "path": "./text/padLeft",
          "name": "padLeft",
          "alias": "lPadLeft"
        },
        "PadRight": {
          "path": "./text/padRight",
          "name": "padRight",
          "alias": "lPadRight"
        },
        "RemoveDiacritics": {
          "path": "./text/removeDiacritics",
          "name": "removeDiacritics",
          "alias": "lRemoveDiacritics"
        },
        "Replace": {
          "path": "./text/replace",
          "name": "replace",
          "alias": "lReplace"
        },
        "ReplaceRegEx": {
          "path": "./text/replaceRegExp",
          "name": "replaceRegExp",
          "alias": "lReplaceRegExp"
        },
        "SplitRegEx": {
          "path": "./text/splitRegExp",
          "name": "splitRegExp",
          "alias": "lSplitRegExp"
        },
        "StartsWith": {
          "path": "./text/startsWith",
          "name": "startsWith",
          "alias": "lStartsWith"
        },
        "Substring": {
          "path": "./text/subString",
          "name": "subString",
          "alias": "lSubString"
        },
        "ToLower": {
          "path": "./text/toLower",
          "name": "toLower",
          "alias": "lToLower"
        },
        "ToNumeric": {
          "path": "./text/toNumeric",
          "name": "toNumeric",
          "alias": "lToNumeric"
        },
        "ToString": {
          "path": "./text/toString",
          "name": "toString",
          "alias": "lToString"
        },
        "ToUpper": {
          "path": "./text/toUpper",
          "name": "toUpper",
          "alias": "lToUpper"
        },
        "Trim": {
          "path": "./text/trim",
          "name": "trim",
          "alias": "longvarchar_trim"
        },
        "TrimEnd": {
          "path": "./text/rTrim",
          "name": "rTrim",
          "alias": "lRTrim"
        },
        "TrimStart": {
          "path": "./text/lTrim",
          "name": "ltrim",
          "alias": "lLTrim"
        },
        "XSLTApply": {
          "path": "./text/xsltApply",
          "name": "xsltApply",
          "alias": "lXsltApply"
        }
      }
    },
    "Boolean": {
      "members": {
        "IsEmpty": {
          "path": "./bool/isEmpty",
          "name": "isEmpty",
          "alias": "bIsEmpty"
        },
        "FromString": {
          "path": "./bool/fromString",
          "name": "fromString",
          "alias": "bFromString"
        },
        "ToString": {
          "path": "./bool/toString",
          "name": "toString",
          "alias": "bToString"
        }
      }
    },
    "GUID": {
      "path": "./types/guid"
    },
    "Numeric": {
      "members": {
        "FromString": {
          "path": "./numeric/fromString",
          "name": "fromString",
          "alias": "nFromString"
        },
        "Integer": {
          "path": "./numeric/integer",
          "name": "integer",
          "alias": "nInteger"
        },
        "IsEmpty": {
          "path": "./numeric/isEmpty",
          "name": "isEmpty",
          "alias": "nIsEmpty"
        },
        "Round": {
          "path": "./numeric/round",
          "name": "round",
          "alias": "nRound"
        },
        "RoundToEven": {
          "path": "./numeric/roundToEven",
          "name": "roundToEven",
          "alias": "nRoundToEven"
        },
        "ToString": {
          "path": "./numeric/toString",
          "name": "toString",
          "alias": "nToString"
        },
        "Truncate": {
          "path": "./numeric/truncate",
          "name": "truncate",
          "alias": "nTruncate"
        }
      }
    },
    "Date": {
      "members": {
        "AddDays": {
          "path": "./date/addDays",
          "name": "addDays",
          "alias": "dAddDays"
        },
        "AddMonths": {
          "path": "./date/addMonths",
          "name": "addMonths",
          "alias": "dAddMonths"
        },
        "AddYears": {
          "path": "./date/addYears",
          "name": "addYears",
          "alias": "dAddYears"
        },
        "Age": {
          "path": "./date/age",
          "name": "age",
          "alias": "dAge"
        },
        "Day": {
          "path": "./date/day",
          "name": "day",
          "alias": "dDay"
        },
        "DayOfWeek": {
          "path": "./date/dayOfWeek",
          "name": "dayOfWeek",
          "alias": "dDayOfWeek"
        },
        "DayOfWeekName": {
          "path": "./date/dayOfWeekName",
          "name": "dayOfWeekName",
          "alias": "dDayOfWeekName"
        },
        "EndOfMonth": {
          "path": "./date/endOfMonth",
          "name": "endOfMonth",
          "alias": "dEndOfMonth"
        },
        "FromString": {
          "path": "./date/fromString",
          "name": "fromString",
          "alias": "dFromString"
        },
        "IsEmpty": {
          "path": "./date/isEmpty",
          "name": "isEmpty",
          "alias": "dIsEmpty"
        },
        "Month": {
          "path": "./date/month",
          "name": "month",
          "alias": "dMonth"
        },
        "MonthName": {
          "path": "./date/monthName",
          "name": "monthName",
          "alias": "dMonthName"
        },
        "New": {
          "path": "./date/newInstance",
          "name": "newInstance"
        },
        "Set": {
          "path": "./date/set",
          "name": "set",
          "alias": "dSet"
        },
        "ToDate": {
          "path": "./date/toDate",
          "name": "toDate"
        },
        "ToString": {
          "path": "./date/toString",
          "name": "toString",
          "alias": "dToString"
        },
        "Year": {
          "path": "./date/year",
          "name": "year",
          "alias": "dYear"
        }
      }
    },
    "GeneXus.Client.ClientStorage": {
      "members": {
        "Set": {
          "path": "./gxcore/client/client-storage/set",
          "name": "set",
          "alias": "clientStorageSet"
        },
        "Get": {
          "path": "./gxcore/client/client-storage/get",
          "name": "get",
          "alias": "clientStorageGet"
        },
        "Remove": {
          "path": "./gxcore/client/client-storage/remove",
          "name": "remove",
          "alias": "clientStorageRemove"
        },
        "Clear": {
          "path": "./gxcore/client/client-storage/clear",
          "name": "clear",
          "alias": "clientStorageClear"
        }
      }
    },
    "GeneXus.Client.ClientInformation": {
      "path": "./gxcore/client/client-information"
    },
    "DateTime": {
      "members": {
        "AddDays": {
          "path": "./date/addDays",
          "name": "addDays",
          "alias": "dtAddDays"
        },
        "AddMonths": {
          "path": "./date/addMonths",
          "name": "addMonths",
          "alias": "dtAddMonths"
        },
        "AddYears": {
          "path": "./date/addYears",
          "name": "addYears",
          "alias": "dtAddYears"
        },
        "Age": {
          "path": "./date/age",
          "name": "age",
          "alias": "dtAge"
        },
        "Day": {
          "path": "./date/day",
          "name": "day",
          "alias": "dtDay"
        },
        "DayOfWeek": {
          "path": "./date/dayOfWeek",
          "name": "dayOfWeek",
          "alias": "dtDayOfWeek"
        },
        "DayOfWeekName": {
          "path": "./date/dayOfWeekName",
          "name": "dayOfWeekName",
          "alias": "dtDayOfWeekName"
        },
        "EndOfMonth": {
          "path": "./date/endOfMonth",
          "name": "endOfMonth",
          "alias": "dtEndOfMonth"
        },
        "IsEmpty": {
          "path": "./date/isEmpty",
          "name": "isEmpty",
          "alias": "dtIsEmpty"
        },
        "Month": {
          "path": "./date/month",
          "name": "month",
          "alias": "dtMonth"
        },
        "MonthName": {
          "path": "./date/monthName",
          "name": "monthName",
          "alias": "dtMonthName"
        },
        "Year": {
          "path": "./date/year",
          "name": "year",
          "alias": "dtYear"
        },
        "Hour": {
          "path": "./datetime/hour",
          "name": "hour",
          "alias": "dtHour"
        },
        "Minute": {
          "path": "./datetime/minute",
          "name": "minute",
          "alias": "dtMinute"
        },
        "Second": {
          "path": "./datetime/second",
          "name": "second",
          "alias": "dtSecond"
        },
        "Millisecond": {
          "path": "./datetime/millisecond",
          "name": "millisecond",
          "alias": "dtMillisecond"
        },
        "Difference": {
          "path": "./datetime/difference",
          "name": "difference",
          "alias": "dtDifference"
        },
        "Now": {
          "path": "./datetime/now",
          "name": "now",
          "alias": "dtNow"
        },
        "Time": {
          "path": "./datetime/time",
          "name": "time",
          "alias": "dttime"
        },
        "AddMilliseconds": {
          "path": "./datetime/addMilliseconds",
          "name": "addMilliseconds"
        },
        "AddSeconds": {
          "path": "./datetime/addSeconds",
          "name": "addSeconds"
        },
        "AddMinutes": {
          "path": "./datetime/addMinutes",
          "name": "addMinutes"
        },
        "AddHours": {
          "path": "./datetime/addHours",
          "name": "addHours"
        },
        "ToDate": {
          "path": "./datetime/toDate",
          "name": "toDate",
          "alias": "dttoDate"
        }
      }
    },
    "GeneXus.SD.Synchronization.SynchronizationEvents": {
      "path": "./gxcore/sd/synchronization/synchronizationEvents"
    },
    "XMLReader": {
      "path": "./types/xmlreader"
    },
    "XMLWriter": {
      "path": "./types/xmlwriter"
    }
  },
  "disambiguated": {
    "Core": {
      "Null": "isNullValue"
    },
    "Character": {
      "IsNull": "cIsNull",
      "SetNull": "cSetNull",
      "ToFormattedString": "cToFormattedString",
      "SetEmpty": "cSetEmpty"
    },
    "Varchar": {
      "IsNull": "vIsNull",
      "SetNull": "vSetNull",
      "ToFormattedString": "vToFormattedString",
      "SetEmpty": "vSetEmpty"
    },
    "LongVarchar": {
      "IsNull": "lIsNull",
      "SetNull": "lSetNull",
      "ToFormattedString": "lToFormattedString",
      "SetEmpty": "lSetEmpty"
    },
    "Numeric": {
      "IsNull": "nIsNull",
      "SetNull": "nSetNull",
      "ToFormattedString": "nToFormattedString",
      "SetEmpty": "nSetEmpty"
    },
    "Date": {
      "IsNull": "dIsNull",
      "SetNull": "dSetNull",
      "ToFormattedString": "dToFormattedString",
      "SetEmpty": "dSetEmpty"
    },
    "DateTime": {
      "IsNull": "dtIsNull",
      "SetNull": "dtSetNull",
      "ToFormattedString": "dtToFormattedString",
      "SetEmpty": "dtSetEmpty",
      "New": "dtNew",
      "Set": "dtSet"
    },
    "Boolean": {
      "IsNull": "bIsNull",
      "SetNull": "bSetNull",
      "ToFormattedString": "bToFormattedString",
      "SetEmpty": "bSetEmpty"
    },
    "TextSearch": {
      "Add": "textSearchadd",
      "Delete": "textSearchdelete",
      "Find": "textSearchfind",
      "Update": "textSearchupdate"
    },
    "GeneXus.Common.Analytics": {
      "SetUserId": "setAnalyticsUserId"
    },
    "GeneXus.Common.Log": {
      "Error": "logError"
    },
    "GeneXus.SD.Actions": {
      "Delete": "deleteAction"
    },
    "GeneXus.SD.Media.PhotoLibrary": {
      "Save": "savePhoto"
    }
  },
  "ignored": {
    "AttributePEM": "all",
    "BasedOnEnumeratedDomain": "all",
    "Boolean": ["GetOldValue"],
    "Core": [
      "Default",
      "Average",
      "Count",
      "Find",
      "Max",
      "Min",
      "Sum",
      "Call",
      "UDF",
      "UDP",
      "Hidden",
      "NoAccept",
      "NoConfirm",
      "NoLoad",
      "NoPrompt",
      "NoRead",
      "Serial",
      "OutputFile",
      "Printer",
      "XFile",
      "XIndex",
      "XLocation",
      "XOrder",
      "XUse"
    ],
    "Character": ["Enable national language support", "GetOldValue"],
    "Date": ["GetOldValue"],
    "DateTime": ["GetOldValue"],
    "DBConnection": "all",
    "DomainPEM": "all",
    "ExcelCells": "all",
    "ExcelDocument": "all",
    "GUID": ["AutogenerateGuid", "IsMatch"],
    "GxImage": "all",
    "LDAPClient": "all",
    "LongVarchar": ["Enable national language support", "GetOldValue"],
    "MailMessage": "all",
    "MailRecipient": "all",
    "MAPISession": "all",
    "Numeric": ["Autonumber", "GetOldValue"],
    "OutlookSession": "all",
    "POP3Session": "all",
    "Queue": "all",
    "QueueMessage": "all",
    "RecipientCollection": "all",
    "Synchronization": "all",
    "SMTPSession": "all",
    "Varchar": ["Enable national language support", "GetOldValue"],
    "VariablePEM": "all",
    "Void": "all",
    "WApiActionPerformedEvent": "all",
    "WApiActivity": "all",
    "WApiApplicationData": "all",
    "WApiAssignmentChangeEvent": "all",
    "WApiAttribute": "all",
    "WApiCalendar": "all",
    "WApiCollection": "all",
    "WApiDataChangeEvent": "all",
    "WApiDocumentDefinition": "all",
    "WApiDocumentInstance": "all",
    "WApiDocumentRepository": "all",
    "WApiError": "all",
    "WApiEvent": "all",
    "WApiEventRepository": "all",
    "WApiFilter": "all",
    "WApiObject": "all",
    "WApiOrganizationalModel": "all",
    "WApiPriorityChangeEvent": "all",
    "WApiProcessDefinition": "all",
    "WApiProcessInstance": "all",
    "WApiRestriction": "all",
    "WApiRestrictionDefinition": "all",
    "WApiRole": "all",
    "WApiServer": "all",
    "WApiStateChangeEvent": "all",
    "WApiUser": "all",
    "WApiWebApplication": "all",
    "WApiWorkitem": "all",
    "WordDocument": "all"
  }
}
