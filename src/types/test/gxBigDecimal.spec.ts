import { GxBigDecimal } from "../gxBigDecimal";

export const testCasesDivide = [
  // GxBigDecimal / GxBigDecimal
  // **a=b**//
  ["123.123456789123456789", "123.123456789123456789", "1"],

  // **a<b*//
  ["123.123456789123456789", "246.123456789123456789", "0.500250802566187816"],
  [
    "123.123456789123456789",
    "246.1234567891234567891234567",
    "0.500250802566187816"
  ],
  [
    "123.1234567891234567891234567",
    "246.123456789123456789",
    "0.500250802566187816"
  ],

  // **a>b**//
  ["246.123456789123456789", "123.123456789123456789", "1.998997292698377497"],
  [
    "246.1234567891234567891234567",
    "123.123456789123456789",
    "1.998997292698377497"
  ],
  [
    "246.123456789123456789",
    "123.1234567891234567891234567",
    "1.998997292698377497"
  ],

  // GxBigDecimal / decimal
  // **a<b**//
  ["123.123456789123456789", "246.12345", "0.500250816365216141"],
  ["123.123456789123456789", "246.12345678", "0.500250802584731423"],
  ["123.1234567891234567891234567", "246.12", "0.500257828657254415"],

  // **a>b**//
  ["246.123456789123456789", "123.12345678912", "1.99899729269843362"],
  ["246.1234567891234567891234567", "123.1234", "1.998998214710797921"],
  ["246.123456789123456789", "123.123456789123", "1.998997292698384913"],

  // GxBigDecimal/ int
  // **a<b**//
  ["123.123456789123456789", "246", "0.500501856866355515"],
  ["123.1234567891234567891234567", "246", "0.500501856866355515"],
  ["123.123456789123456789", "2463456687587", "0.000000000049979955"],

  // **a>b**//
  ["246.123456789123456789", "123", "2.00100371373271103"],
  ["246.1234567891234567891234567", "123", "2.00100371373271103"],
  ["246.123456789123456789", "1", "246.123456789123456789"],

  // decimal / GxBigDecimal
  // **a<b**//
  ["123.12345678912", "246.123456789123456789", "0.500250802566173771"],
  ["123.1234", "246.1234567891234567891234567", "0.500250571831888056"],
  ["123.123456789123", "246.123456789123456789", "0.50025080256618596"],

  // **a>b**//
  ["246.12345", "123.123456789123456789", "1.99899723755759739"],
  ["246.12345678", "123.123456789123456789", "1.998997292624277427"],
  ["246.12", "123.1234567891234567891234567", "1.998969216901826582"],

  // int / GxBigDecimal
  // **a<b**//
  ["123", "246.123456789123456789", "0.499749197433812183"],
  ["123", "246.1234567891234567891234567", "0.499749197433812183"],
  ["1", "246.123456789123456789", "0.004063001605152944"],
  ["1", "246568349234673242.123", "0.000000000000000004"],
  ["1", "2465683492346732423.12", "0"],

  // **a>b**//
  ["246", "123.123456789123456789", "1.997994585396754994"],
  ["246", "123.1234567891234567891234567", "1.997994585396754994"],
  ["2463456687587", "123.123456789123456789", "20008020825.846550655641662538"],

  ["-123.123456789123456789", "246", "-.500501856866355515"],
  ["-246", "123.1234567891234567891234567", "-1.997994585396754994"],
  ["123.1234567891234567891234567", "-2463456687587", "-.000000000049979955"],
  ["-123.1234567891234567891234567", "-2463456687587", "0.000000000049979955"],

  // int / int
  // **a<b**//
  ["1", "243", "0.004115226337448559"],
  // **a>b**//
  ["243", "1", "243"],

  //decimal / decimal
  // **a<b**//
  ["1.1", "2.25", "0.488888888888888888"],
  ["1.123456789123456", "2.25", "0.499314128499313777"],
  ["1.12345678912345", "2.25123456789123", "0.499040306659741471"],
  ["1.123456789123456", "2.251234567891234", "0.499040306659743249"],
  ["1.12", "2.251234567891234", "0.497504798466701408"],
  ["1.123456789123456", "2.2512", "0.499047969582203269"],
  ["123.123456789123456", "24.251234567891234", "5.076997480043328601"],
  ["0.1", "2.25", "0.044444444444444444"],
  ["0.123456789123456", "24.251234567891234", "0.005090742443558459"],

  // **a>b**//
  ["2.25", "1.1", "2.045454545454545454"],
  ["0.25", "0.1", "2.5"]
];

export const testCasesAdd = [
  //GxBigDecimal + GxBigDecimal
  [
    "123.123456789123456789",
    "123.123456789123456789",
    "246.246913578246913578"
  ],
  [
    "123.123456789123456789",
    "246.123456789123456789",
    "369.246913578246913578"
  ],
  [
    "123.123456789123456789",
    "246.1234567891234567891234567",
    "369.2469135782469135781234567"
  ],
  [
    "123.1234567891234567891234567",
    "246.123456789123456789",
    "369.2469135782469135781234567"
  ],

  //GxBigDecimal + decimal
  ["123.123456789123456789", "246.12345", "369.246906789123456789"],
  ["123.123456789123456789", "246.12345678", "369.246913569123456789"],
  ["123.1234567891234567891234567", "246.12", "369.2434567891234567891234567"],

  //GxBigDecimal + int
  ["123.123456789123456789", "246", "369.123456789123456789"],
  ["123.1234567891234567891234567", "246", "369.1234567891234567891234567"],
  [
    "123.123456789123456789",
    "2463456687587 ",
    "2463456687710.123456789123456789"
  ],

  //-GxBigDecimal + ...
  ["-123.123456789123456789", "246", "122.876543210876543211"],
  ["-246", "123.1234567891234567891234567", "-122.8765432108765432108765433"],
  [
    "123.123456789123456789",
    "-2463456687587",
    "-2463456687463.876543210876543211"
  ],
  [
    "-123.123456789123456789",
    "-2463456687587",
    "-2463456687710.123456789123456789"
  ]
];

export const testCasesSubtract = [
  //GxBigDecimal - GxBigDecimal
  //**a=b**//
  ["123.123456789123456789", "123.123456789123456789", "0"],

  //**a<b*//
  ["123.123456789123456789", "246.123456789123456789", "-123"],
  [
    "123.123456789123456789",
    "246.1234567891234567891234567",
    "-123.0000000000000000001234567"
  ],
  [
    "123.1234567891234567891234567",
    "246.123456789123456789",
    "-122.9999999999999999998765433"
  ],

  //**a>b**//
  ["246.123456789123456789", "123.123456789123456789", "123"],
  [
    "246.1234567891234567891234567",
    "123.123456789123456789",
    "123.0000000000000000001234567"
  ],
  [
    "246.123456789123456789",
    "123.1234567891234567891234567",
    "122.9999999999999999998765433"
  ],

  //GxBigDecimal - decimal
  //**a<b**//
  ["123.123456789123456789", "246.12345", "-122.999993210876543211"],
  ["123.123456789123456789", "246.12345678", "-122.999999990876543211"],
  ["123.1234567891234567891234567", "246.12", "-122.9965432108765432108765433"],

  //**a>b**//
  ["246.123456789123456789", "123.12345678912", "123.000000000003456789"],
  [
    "246.1234567891234567891234567",
    "123.1234",
    "123.0000567891234567891234567"
  ],
  ["246.123456789123456789", "123.123456789123", "123.000000000000456789"],

  //GxBigDecimal - int
  //**a<b**//
  ["123.123456789123456789", "246", "-122.876543210876543211"],
  ["123.1234567891234567891234567", "246", "-122.8765432108765432108765433"],
  [
    "123.123456789123456789",
    "2463456687587",
    "-2463456687463.876543210876543211"
  ],

  //**a>b**//
  ["246.123456789123456789", "123", "123.123456789123456789"],
  ["246.1234567891234567891234567", "123", "123.1234567891234567891234567"],
  ["246.123456789123456789", "1", "245.123456789123456789"],

  //decimal - GxBigDecimal
  //**a<b**//
  ["123.12345678912", "246.123456789123456789", "-123.000000000003456789"],
  [
    "123.1234",
    "246.1234567891234567891234567",
    "-123.0000567891234567891234567"
  ],
  ["123.123456789123", "246.123456789123456789", "-123.000000000000456789"],

  //**a>b**//
  ["246.12345", "123.123456789123456789", "122.999993210876543211"],
  ["246.12345678", "123.123456789123456789", "122.999999990876543211"],
  ["246.12", "123.1234567891234567891234567", "122.9965432108765432108765433"],

  //int - GxBigDecimal
  //**a<b**//
  ["123", "246.123456789123456789", "-123.123456789123456789"],
  ["123", "246.1234567891234567891234567", "-123.1234567891234567891234567"],
  ["1", "246.123456789123456789", "-245.123456789123456789"],
  ["1", "246568349234673242.123", "-246568349234673241.123"],
  ["1", "2465683492346732423.12", "-2465683492346732422.12"],

  //**a>b**//
  ["246", "123.123456789123456789", "122.876543210876543211"],
  ["246", "123.1234567891234567891234567", "122.8765432108765432108765433"],
  [
    "2463456687587",
    "123.123456789123456789",
    "2463456687463.876543210876543211"
  ],

  ["-123.123456789123456789", "246 ", "-369.123456789123456789"],
  ["-246", "123.1234567891234567891234567", "-369.1234567891234567891234567"],
  [
    "123.123456789123456789",
    "-2463456687587",
    "2463456687710.123456789123456789"
  ],
  [
    "-123.123456789123456789",
    "-2463456687587",
    "2463456687463.876543210876543211"
  ]
];

export const testCasesMultiply = [
  //GxBigDecimal * GxBigDecimal
  [
    "123.123456789123456789",
    "123.123456789123456789",
    "15159.385611703151043772515622620750190521"
  ],
  [
    "123.123456789123456789",
    "246.123456789123456789",
    "30303.570796765336228819515622620750190521"
  ],
  [
    "123.123456789123456789",
    "246.1234567891234567891234567",
    "30303.5707967653362288347160382885279683887625363"
  ],
  [
    "123.1234567891234567891234567",
    "246.123456789123456789",
    "30303.5707967653362288499012123885279683887625363"
  ],

  //GxBigDecimal * decimal
  ["123.123456789123456789", "246.12345", "30303.56996086498766083460205"],
  [
    "123.123456789123456789",
    "246.12345678",
    "30303.57079564202469109163907942"
  ],
  [
    "123.1234567891234567891234567",
    "246.12",
    "30303.145184939065184939065163004"
  ],

  //GxBigDecimal * int
  ["123.123456789123456789", "246", "30288.370370124370370094"],
  ["123.1234567891234567891234567", "246", "30288.3703701243703701243703482"],
  [
    "123.123456789123456789",
    "2463456687587 ",
    "303309303025995.197630633067178143"
  ],

  //-GxBigDecimal * ...
  ["-123.123456789123456789", "246", "-30288.370370124370370094"],
  ["-246", "123.1234567891234567891234567", "-30288.3703701243703701243703482"],
  [
    "123.123456789123456789",
    "-2463456687587",
    "-303309303025995.197630633067178143"
  ],
  [
    "-123.123456789123456789",
    "-2463456687587",
    "303309303025995.197630633067178143"
  ]
];

export const testConvertToDecimal = [
  ["123.123456789123456789", "123.12345678912"]
];

export const testConvertToInt = [["123.123456789123456789", "123"]];

export const testConvertToBigDecimal = [
  ["123.123456789123456789", "123.123456789123456789"]
];

describe("divide operation", () => {
  for (const t of testCasesDivide) {
    it(`should divide ${t[0]} / ${t[1]} to equal ${t[2]}`, () => {
      expect(GxBigDecimal.divide(t[0], t[1]).toString()).toBe(t[2]);
    });
  }
});

describe("add operation", () => {
  for (const t of testCasesAdd) {
    it(`should add ${t[0]} + ${t[1]} to equal ${t[2]}`, () => {
      expect(GxBigDecimal.add(t[0], t[1]).toString()).toBe(t[2]);
    });
  }
});

describe("subtract operation", () => {
  for (const t of testCasesSubtract) {
    it(`should subtract ${t[0]} - ${t[1]} to equal ${t[2]}`, () => {
      expect(GxBigDecimal.subtract(t[0], t[1]).toString()).toBe(t[2]);
    });
  }
});

describe("multiply operation", () => {
  for (const t of testCasesMultiply) {
    it(`should multiply ${t[0]} * ${t[1]} to equal ${t[2]}`, () => {
      expect(GxBigDecimal.multiply(t[0], t[1]).toString()).toBe(t[2]);
    });
  }
});

describe("convertToDecimal operation", () => {
  for (const t of testConvertToDecimal) {
    it(`should convertToDecimal ${t[0]} to equal ${t[1]}`, () => {
      expect(GxBigDecimal.convertToDecimal(t[0]).toString()).toBe(t[1]);
    });
  }
});

describe("convertToInt operation", () => {
  for (const t of testConvertToInt) {
    it(`should convertToInt ${t[0]} to equal ${t[1]}`, () => {
      expect(GxBigDecimal.convertToInt(t[0]).toString()).toBe(t[1]);
    });
  }
});

describe("convertToBigDecimal operation", () => {
  for (const t of testConvertToBigDecimal) {
    it(`should convertToBigDecimal ${t[0]} to equal ${t[1]}`, () => {
      expect(GxBigDecimal.convertToBigDecimal(t[0]).toString()).toBe(t[1]);
    });
  }
});
